Index: app/src/main/java/com/example/matrimonyapp/volley/URLs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.matrimonyapp.volley;\r\n\r\n\r\npublic class URLs {\r\n\r\n    public static final String MainURL                          = \"http://matrimonial.sharpflux.com/\";\r\n\r\n    public static final String URL_POST_REGISTRATION            = MainURL+\"api/Registration/RegisterUser\";\r\n    public static final String URL_POST_LOGIN                   = MainURL+\"api/Users/Login\";\r\n    public static final String URL_GET_LOGIN                    = MainURL+\"api/Users/Login?\";\r\n    public static final String URL_POST_UPDATEPASSWORD          = MainURL+\"api/UserUdatePasswordAPI/UpdatePasswordApi\";\r\n\r\n\r\n    public static final String URL_GET_COUNTRY                  = MainURL+\"api/CountryApi/CountryMasterGet?\";\r\n    public static final String URL_GET_STATE                    = MainURL+\"api/States/GETSTATE?\";\r\n    public static final String URL_GET_DISTRICT                 = MainURL+\"api/District/Get_DistrictAPI?\";\r\n    public static final String URL_GET_TALUKA                   = MainURL+\"api/Talukas/Get_TalukaAPI?\";\r\n    public static final String URL_GET_CITY                     = MainURL+\"api/Talukas/GetCity?\";\r\n    public static final String URL_GET_BLOODGROUP               = MainURL+\"api/PersonalDetailsAPI/BloodTypesGET?\";\r\n    public static final String URL_GET_RELIGION                 = MainURL+\"api/ReligionAPI/GETReligion?\";\r\n    public static final String URL_GET_CASTE                    = MainURL+\"api/CasteApi/Get_CasteAPI?\";\r\n    public static final String URL_GET_MOTHERTONGUE             = MainURL+\"api/MotherTongueApi/MotherTongueGetAPI?\";\r\n    public static final String URL_GET_OCCUPATION               = MainURL+\"api/OccupationAPI/GETOccupation?\";\r\n    public static final String URL_POST_VERIFYMOBILE            = MainURL+\"/User_Authentication/GetUserFromMobileNo\";\r\n    public static final String URL_GET_OTP                      = MainURL+\"User_Authentication/GetOTP?\";\r\n    public static final String URL_GET_SALARY                   = MainURL+\"api/SalaryPackageApi/SalaryPackageGetAPI?\";\r\n    public static final String URL_GET_SKINCOLOR                = MainURL+\"api/SkinColourApi/Get_SkinColourAPI?\";\r\n    public static final String URL_GET_MARITALSTATUS            = MainURL+\"api/MaritalStatusApi/Get_MaritalStatusAPI?\";\r\n    public static final String URL_GET_FAMILYSTATUS             = MainURL+\"api/FamilyStatusApi/Get_FamilyStatusAPI?\";\r\n    public static final String URL_GET_FAMILYTYPE               = MainURL+\"api/FamilyTypeApi/Get_FamilyTypeAPI?\";\r\n    public static final String URL_GET_FAMILYVALUES             = MainURL+\"api/FamilyValuesApi/Get_FamilyValuesAPI?\";\r\n    public static final String URL_GET_DIET                     = MainURL+\"api/DietMasterApi/DietMasterGetAPI?\";\r\n    public static final String URL_GET_SIBLINGSLIST             = MainURL+\"api/SiblingListApi/Get_SiblingListAPI?\";\r\n    public static final String URL_GET_QUALIFICATIONNAME        = MainURL+\"api/OccupationAPI/GETQualificationAPI?\";\r\n    public static final String URL_GET_QUALIFICATIONLEVEL       = MainURL+\"api/QualificationLevelApi/Get_QualificationLevelAPI?\";\r\n    public static final String URL_GET_DESIGNATION              = MainURL+\"api/DesignationApi/Get_DesignationAPI?\";\r\n\r\n    public static final String URL_GET_REGISTEREDUSER           = MainURL+\"api/Registration/GetRegisterUserAPI?\";\r\n\r\n    public static final String URL_GET_BASICDETAILS             = MainURL+\"api/Registration/GetUserBasicDetailsAPI?\";\r\n    public static final String URL_POST_BASICDETAILS            = MainURL+\"api/BasicDetailsAPI/BasicDetailsInsertUpdate\"; //\"/api/BasicDetailsAPI/BasicDetailsInsertUpdate\";\r\n\r\n    public static final String URL_GET_RELIGIONDETAIL           = MainURL+\"api/ReligiousDetailsAPI/GetUserReligiousDetailsAPI?\";\r\n    public static final String URL_POST_RELIGIONDETAIL          = MainURL+\"api/ReligiousDetailsAPI/ReligiousDetailsInsertUpdate\";\r\n\r\n        public static final String URL_GET_FAMILYDETAILS        = MainURL+\"api/FamilyDetailsAPI/GetUserFamilyDetailsAPI?\";\r\n    public static final String URL_POST_FAMILYDETAILS           = MainURL+\"api/FamilyDetailsAPI/FamilyDetailsInsertUpdate\";\r\n\r\n    public static final String URL_GET_QUALIFICATIONDETAILS     = MainURL+\"api/QualificationDetailsAPI/GetUserQualificationDetailsAPI?\";\r\n    public static final String URL_POST_QUALIFICATIONDETAILS    = MainURL+\"api/QualificationDetailsAPI/QualificationDetailsInsertUpdate\";\r\n\r\n    public static final String URL_GET_PROFESSIONALDETAILS      = MainURL+\"api/ProfessionalDetailsAPI/GetUserProfessionalDetailsAPI?\";\r\n    public static final String URL_POST_PROFESSIONALDETAILS     = MainURL+\"api/ProfessionalDetailsAPI/ProfessionalDetailsInsertUpdate\";\r\n\r\n    public static final String URL_GET_PERSONALDETAILS          = MainURL+\"api/PersonalDetailsAPI/GetUserPersonalDetailsAPI?\";\r\n    public static final String URL_POST_PERSONALDETAILS         = MainURL+\"api/PersonalDetailsAPI/PersonalDetailsInsertUpdate\";\r\n\r\n    public static final String URL_GET_ALL_QUALIFICATIONNAME    = MainURL+\"api/OccupationAPI/GETAllQualificationAPI?\";\r\n    public static final String URL_GET_MULTIPLE_QUALIFICATION   = MainURL+\"api/QualificationDetailsAPI/GetQualificationsMultipleAPI?\";\r\n\r\n    public static final String URL_GET_MULTIPLE_DISTRICT        = MainURL+\"api/DistrictMultipleApi/Get_DistrictMultipleAPI?\";\r\n    public static final String URL_GET_MULTIPLE_TALUKA          = MainURL+\"api/Talukas/GetTalukaMultipleAPI?\";\r\n    public static final String URL_GET_MULTIPLE_STATE           = MainURL+\"api/States/GetMultipleState?\";\r\n    public static final String URL_GET_MULTIPLE_CITY            = MainURL+\"api/District/GetMultipleCities?\";\r\n\r\n    public static final String URL_GET_MULTIPLE_CASTE           = MainURL+\"api/CasteApi/Get_CasteMultipleAPI?\";\r\n    public static final String URL_GET_SUBCASTE                 = MainURL+\"api/CasteApi/Get_SubCasteAPI?\";\r\n    public static final String URL_GET_MULTIPLE_SUBCASTE        = MainURL+\"api/CasteApi/Get_SubCasteMultipleAPI?\";\r\n\r\n    public static final String URL_POST_PROFILEPIC              = MainURL+\"api/Registration/ImageUploader\";\r\n    public static final String URL_GET_PROFILEPIC               = MainURL+\"api/Registration/fetchUserProfile?\";\r\n\r\n    public static final String URL_POST_MULTIPLEIMAGES          = MainURL+\"api/Registration/MultipleImageUploader\";\r\n    public static final String URL_GET_MULTIPLEIMAGES           = MainURL+\"\";\r\n\r\n\r\n    public static final String URL_POST_FILTER                  = MainURL+\"api/RegistrationAPINew/SETPreferenceFilter\";\r\n    public static final String URL_GET_FILTER                   = MainURL+\"\";\r\n\r\n\r\n    public static final String URL_GET_PROPERTYTYPE             = MainURL+\"api/PersonalDetailsAPI/PropertyType?\";\r\n    public static final String URL_GET_PROPERTYBHKTYPE          = MainURL+\"api/ProertyTypeApi/BHK_TypeGetAPI?\";\r\n    public static final String URL_GET_VEHICLETYPE              = MainURL+\"api/Vehicles/GETVehicles?\";\r\n    public static final String URL_GET_VEHICLEBRANDNAME         = MainURL+\"api/PersonalDetailsAPI/VehicalMakeGetApi?\";\r\n\r\n/*\r\n   Client Id :  AVLYBwu--8UXYJoKseceJY6g0ML7jIKeHKAPGNVShsOHjphCJO4BjPAqS9YE1EF7uHHMZ71nkJtEed1z\r\n*/\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/matrimonyapp/volley/URLs.java	(revision 1060ce3f44c0ef22b89ffdfb5bb74855ada03692)
+++ app/src/main/java/com/example/matrimonyapp/volley/URLs.java	(date 1610431787979)
@@ -43,7 +43,7 @@
     public static final String URL_GET_RELIGIONDETAIL           = MainURL+"api/ReligiousDetailsAPI/GetUserReligiousDetailsAPI?";
     public static final String URL_POST_RELIGIONDETAIL          = MainURL+"api/ReligiousDetailsAPI/ReligiousDetailsInsertUpdate";
 
-        public static final String URL_GET_FAMILYDETAILS        = MainURL+"api/FamilyDetailsAPI/GetUserFamilyDetailsAPI?";
+    public static final String URL_GET_FAMILYDETAILS            = MainURL+"api/FamilyDetailsAPI/GetUserFamilyDetailsAPI?";
     public static final String URL_POST_FAMILYDETAILS           = MainURL+"api/FamilyDetailsAPI/FamilyDetailsInsertUpdate";
 
     public static final String URL_GET_QUALIFICATIONDETAILS     = MainURL+"api/QualificationDetailsAPI/GetUserQualificationDetailsAPI?";
Index: app/src/main/java/com/example/matrimonyapp/fragment/FamilyDetailsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.matrimonyapp.fragment;\r\n\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.example.matrimonyapp.R;\r\nimport com.example.matrimonyapp.activity.LoginActivity;\r\nimport com.example.matrimonyapp.activity.MainActivity;\r\nimport com.example.matrimonyapp.adapter.AddPersonAdapter;\r\nimport com.example.matrimonyapp.adapter.ChatAdapter;\r\nimport com.example.matrimonyapp.adapter.DataFetcher;\r\nimport com.example.matrimonyapp.adapter.TimelineAdapter;\r\nimport com.example.matrimonyapp.customViews.CustomDialogAddFarm;\r\nimport com.example.matrimonyapp.customViews.CustomDialogAddMama;\r\nimport com.example.matrimonyapp.customViews.CustomDialogAddProperty;\r\nimport com.example.matrimonyapp.customViews.CustomDialogAddSibling;\r\nimport com.example.matrimonyapp.customViews.CustomDialogAddVehicle;\r\nimport com.example.matrimonyapp.customViews.CustomDialogLoadingProgressBar;\r\nimport com.example.matrimonyapp.modal.AddPersonModel;\r\nimport com.example.matrimonyapp.modal.ChatModel;\r\nimport com.example.matrimonyapp.modal.UserModel;\r\nimport com.example.matrimonyapp.sqlite.SQLiteFarmDetails;\r\nimport com.example.matrimonyapp.sqlite.SQLiteMamaDetails;\r\nimport com.example.matrimonyapp.sqlite.SQLitePropertyDetails;\r\nimport com.example.matrimonyapp.sqlite.SQLiteSiblingDetails;\r\nimport com.example.matrimonyapp.sqlite.SQLiteVehicleDetails;\r\nimport com.example.matrimonyapp.validation.FieldValidation;\r\nimport com.example.matrimonyapp.validation.StateDistrictTalukaValidation;\r\nimport com.example.matrimonyapp.volley.CustomSharedPreference;\r\nimport com.example.matrimonyapp.volley.URLs;\r\nimport com.example.matrimonyapp.volley.VolleySingleton;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\nimport com.suke.widget.SwitchButton;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n */\r\npublic class FamilyDetailsFragment extends Fragment {\r\n\r\n    View view;\r\n    private Context context;\r\n    private TextView textView_fatherQualificationId, textView_fatherOccupationId, textView_fatherStateId,\r\n            textView_fatherCountryId, textView_fatherCityId, textView_saveAndContinue,\r\n            textView_motherQualificationId, textView_motherOccupationId, textView_familyIncome;\r\n\r\n    private EditText editText_fatherName, editText_fatherMobileNo, editText_fatherQualification,\r\n            editText_fatherOccupation, editText_fatherState, editText_fatherCountry, editText_fatherCity,\r\n            editText_fatherAddress, editText_motherName, editText_motherMobileNo, editText_motherQualification,\r\n            editText_motherOccupation, editText_relative1, editText_relative2, editText_relative3, editText_relative4,\r\n            editText_familyIncome;\r\n\r\n\r\n    private ImageView imageView_back, imageView_addProperty, imageView_addVehicle, imageView_addSibling, imageView_addMama, imageView_addFarm;\r\n\r\n    private RadioGroup radioGroup_motherServiceType;\r\n    private RadioButton radioButton_serviceWoman, radioButton_housewife;\r\n\r\n    private String fatherName, fatherMobileNo, fatherOccupationId, fatherQualificationId, fatherAnnualIncome,\r\n            fatherStateId, fatherCountryId, fatherCityId, fatherAddress, motherName, motherMobileNo, motherQualificationId,\r\n            motherOccupation, familyIncome, relative1, relative2, relative3, relative4;\r\n\r\n    //SwitchButton switchButton_haveFather, switchButton_haveMother;\r\n    CheckBox checkBox_fatherIsAlive, checkBox_motherIsAlive;\r\n\r\n    Bundle bundle;\r\n\r\n    private StringBuilder stringBuilder_sibling, stringBuilder_mama, stringBuilder_property, stringBuilder_farm;\r\n\r\n    private DataFetcher dataFetcher;\r\n\r\n    private UserModel userModel;\r\n\r\n    private ArrayList<AddPersonModel> addPersonModelArrayList_sibling, addPersonModelArrayList_mama,\r\n            addPersonModelArrayList_property, addPersonModelArrayList_farm, addPersonModelArrayList_vehicle;\r\n\r\n\r\n    private RecyclerView recyclerView_addSibling, recyclerView_addMama, recyclerView_addProperty,\r\n            recyclerView_addFarm, recyclerView_addVehicle;\r\n\r\n    private AddPersonAdapter addPersonAdapter_sibling, addPersonAdapter_mama, addPersonAdapter_property,\r\n            addPersonAdapter_farm, addPersonAdapter_vehicle;\r\n\r\n    private SQLiteSiblingDetails sqLiteSiblingDetails;\r\n    private SQLiteMamaDetails sqLiteMamaDetails;\r\n    private SQLitePropertyDetails sqLitePropertyDetails;\r\n    private SQLiteFarmDetails sqLiteFarmDetails;\r\n    private SQLiteVehicleDetails sqLiteVehicleDetails;\r\n\r\n    private CustomDialogLoadingProgressBar customDialogLoadingProgressBar;\r\n    private CustomDialogAddSibling customDialogAddSibling;\r\n    private CustomDialogAddMama customDialogAddMama;\r\n    //private CustomDialogAddVehicle customDialogAddVehicle;\r\n\r\n    protected int familyDetailsId=0;\r\n    protected int fatherDetailsId=0;\r\n    protected int motherDetailsId=0;\r\n    private TextInputLayout textInputLayout_motherOccupation;\r\n    private int currentCountryId =0, currentStateId=0, newCountryId=0, newStateId=0;\r\n\r\n    public FamilyDetailsFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        view = inflater.inflate(R.layout.fragment_family_details, container, false);\r\n\r\n        context = getContext();\r\n\r\n        bundle = getArguments();\r\n\r\n\r\n        if (!CustomSharedPreference.getInstance(getContext()).isLoggedIn()) {\r\n            startActivity(new Intent(getContext(), LoginActivity.class));\r\n        }\r\n\r\n        userModel = CustomSharedPreference.getInstance(getContext()).getUser();\r\n\r\n\r\n        checkBox_fatherIsAlive = view.findViewById(R.id.checkBox_fatherIsAlive);\r\n        editText_fatherName = view.findViewById(R.id.editText_fatherName);\r\n        editText_fatherMobileNo = view.findViewById(R.id.editText_fatherMobileNo);\r\n        editText_fatherQualification = view.findViewById(R.id.editText_fatherQualification);\r\n        textView_fatherQualificationId = view.findViewById(R.id.textView_fatherQualificationId);\r\n        editText_fatherOccupation = view.findViewById(R.id.editText_fatherOccupation);\r\n\r\n        editText_fatherState = view.findViewById(R.id.editText_fatherState);\r\n        textView_fatherStateId = view.findViewById(R.id.textView_fatherStateId);\r\n        editText_fatherCountry = view.findViewById(R.id.editText_fatherCountry);\r\n        textView_fatherCountryId = view.findViewById(R.id.textView_fatherCountryId);\r\n        editText_fatherCity = view.findViewById(R.id.editText_fatherCity);\r\n        textView_fatherCityId = view.findViewById(R.id.textView_fatherCityId);\r\n\r\n\r\n\r\n        editText_familyIncome = view.findViewById(R.id.editText_familyIncome);\r\n        textView_familyIncome = view.findViewById(R.id.textView_familyIncome);\r\n        //editText_fatherProperty = view.findViewById(R.id.editText_fatherProperty);\r\n        editText_fatherAddress = view.findViewById(R.id.editText_fatherAddress);\r\n\r\n        checkBox_motherIsAlive = view.findViewById(R.id.checkBox_motherIsAlive);\r\n        editText_motherName = view.findViewById(R.id.editText_motherName);\r\n        editText_motherMobileNo = view.findViewById(R.id.editText_motherMobileNo);\r\n        editText_motherQualification = view.findViewById(R.id.editText_motherQualification);\r\n        textView_motherQualificationId = view.findViewById(R.id.textView_motherQualificationId);\r\n        radioGroup_motherServiceType = view.findViewById(R.id.radioGroup_motherServiceType);\r\n        radioButton_serviceWoman = view.findViewById(R.id.radioButton_serviceWoman);\r\n        radioButton_housewife = view.findViewById(R.id.radioButton_housewife);\r\n        editText_motherOccupation = view.findViewById(R.id.editText_motherOccupation);\r\n        //editText_motherAnnualIncome = view.findViewById(R.id.editText_motherAnnualIncome);\r\n\r\n        editText_relative1 = view.findViewById(R.id.editText_relative1);\r\n        editText_relative2 = view.findViewById(R.id.editText_relative2);\r\n        editText_relative3 = view.findViewById(R.id.editText_relative3);\r\n        editText_relative4 = view.findViewById(R.id.editText_relative4);\r\n\r\n        //textView_noOfSiblings = view.findViewById(R.id.textView_noOfSiblings);\r\n        //imageView_add = view.findViewById(R.id.imageView_add);\r\n        imageView_addSibling = view.findViewById(R.id.imageView_addSibling);\r\n        imageView_addMama = view.findViewById(R.id.imageView_addMama);\r\n        imageView_addProperty = view.findViewById(R.id.imageView_addProperty);\r\n        imageView_addVehicle = view.findViewById(R.id.imageView_addVehicle);\r\n        imageView_addFarm = view.findViewById(R.id.imageView_addFarm);\r\n\r\n        recyclerView_addSibling = view.findViewById(R.id.recyclerView_addSibling);\r\n        recyclerView_addMama = view.findViewById(R.id.recyclerView_addMama);\r\n        recyclerView_addProperty = view.findViewById(R.id.recyclerView_addProperty);\r\n        recyclerView_addFarm = view.findViewById(R.id.recyclerView_addFarm);\r\n        recyclerView_addVehicle = view.findViewById(R.id.recyclerView_addVehicle);\r\n\r\n\r\n\r\n        textView_fatherOccupationId = view.findViewById(R.id.textView_fatherOccupationId);\r\n        textView_motherOccupationId = view.findViewById(R.id.textView_motherOccupationId);\r\n        textInputLayout_motherOccupation = view.findViewById(R.id.textInputLayout_motherOccupation);\r\n\r\n\r\n/*        textField_mamaName = view.findViewById(R.id.textField_mamaName);\r\n        textField_mamaMobileNo = view.findViewById(R.id.textField_mamaMobileNo );\r\n        textField_mamaOccupation = view.findViewById(R.id.textField_mamaOccupation);*/\r\n\r\n        //switchButton_haveMama = view.findViewById(R.id.switchButton_haveMama);\r\n\r\n        textView_saveAndContinue=((MainActivity)getActivity()).findViewById(R.id.txt_saveAndContinue);\r\n        imageView_back =((MainActivity)getActivity()).findViewById(R.id.imageView_back);\r\n        TextView tv =((MainActivity)getActivity()).findViewById(R.id.textView_toolbar);\r\n        //tv.setText(\"Family Details\");\r\n        tv.setText(context.getResources().getString(R.string.family_details));\r\n\r\n\r\n        dataFetcher = new DataFetcher(\"State\",getContext());\r\n\r\n        stringBuilder_sibling = new StringBuilder();\r\n        stringBuilder_mama = new StringBuilder();\r\n        stringBuilder_property = new StringBuilder();\r\n        stringBuilder_farm = new StringBuilder();\r\n\r\n\r\n\r\n\r\n        AsyncTaskLoad getTask = new AsyncTaskLoad();\r\n        getTask.execute(\"getDetails\");\r\n\r\n\r\n        // Sibling recycleView\r\n        addPersonModelArrayList_sibling = new ArrayList<>();\r\n\r\n        sqLiteSiblingDetails = new SQLiteSiblingDetails(getContext());\r\n\r\n\r\n        addPersonAdapter_sibling = new AddPersonAdapter(getContext(), addPersonModelArrayList_sibling, \"Sibling\");\r\n        recyclerView_addSibling.setAdapter(addPersonAdapter_sibling);\r\n        recyclerView_addSibling.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager_sibling = new LinearLayoutManager(getContext());\r\n        recyclerView_addSibling.setLayoutManager(linearLayoutManager_sibling);\r\n\r\n        //textView_noOfSiblings.setText(String.valueOf(sqLiteSiblingDetails.numberOfRows()));\r\n\r\n\r\n\r\n\r\n        // Mama recyclerView\r\n        addPersonModelArrayList_mama = new ArrayList<>();\r\n\r\n        sqLiteMamaDetails = new SQLiteMamaDetails(getContext());\r\n\r\n\r\n        addPersonAdapter_mama = new AddPersonAdapter(getContext(), addPersonModelArrayList_mama, \"Mama\");\r\n        recyclerView_addMama.setAdapter(addPersonAdapter_mama);\r\n        recyclerView_addMama.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager_mama= new LinearLayoutManager(getContext());\r\n        recyclerView_addMama.setLayoutManager(linearLayoutManager_mama);\r\n\r\n\r\n        // Property recyclerView\r\n        addPersonModelArrayList_property = new ArrayList<>();\r\n\r\n        sqLitePropertyDetails = new SQLitePropertyDetails(getContext());\r\n\r\n\r\n        addPersonAdapter_property = new AddPersonAdapter(getContext(), addPersonModelArrayList_property,\r\n                \"Property\");\r\n        recyclerView_addProperty.setAdapter(addPersonAdapter_property);\r\n        recyclerView_addProperty.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager_property = new LinearLayoutManager(getContext());\r\n        recyclerView_addProperty.setLayoutManager(linearLayoutManager_property);\r\n\r\n\r\n\r\n        //VehicleRecyclerView();\r\n        // Vehicle recyclerView\r\n        addPersonModelArrayList_vehicle = new ArrayList<>();\r\n\r\n        sqLiteVehicleDetails = new SQLiteVehicleDetails(getContext());\r\n\r\n\r\n        addPersonAdapter_vehicle = new AddPersonAdapter(getContext(), addPersonModelArrayList_vehicle,\r\n                \"Vehicle\");\r\n        recyclerView_addVehicle.setAdapter(addPersonAdapter_vehicle);\r\n        recyclerView_addVehicle.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager_vehicle = new LinearLayoutManager(getContext());\r\n        recyclerView_addVehicle.setLayoutManager(linearLayoutManager_vehicle);\r\n\r\n        //farmRecyclerView();\r\n        // Farm recyclerView\r\n        addPersonModelArrayList_farm = new ArrayList<>();\r\n\r\n        sqLiteFarmDetails = new SQLiteFarmDetails(getContext());\r\n\r\n\r\n        addPersonAdapter_farm = new AddPersonAdapter(getContext(), addPersonModelArrayList_farm,\r\n                \"Farm\");\r\n        recyclerView_addFarm.setAdapter(addPersonAdapter_farm);\r\n        recyclerView_addFarm.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager_farm = new LinearLayoutManager(getContext());\r\n        recyclerView_addFarm.setLayoutManager(linearLayoutManager_farm);\r\n\r\n\r\n\r\n\r\n\r\n        showPopup(editText_motherQualification,\"MotherQualification\");\r\n        showPopup(editText_fatherQualification,\"FatherQualification\");\r\n        showPopup(editText_fatherOccupation,\"FatherOccupation\");\r\n        showPopup(editText_motherOccupation,\"MotherOccupation\");\r\n        showPopup(editText_familyIncome,\"FamilyIncome\");\r\n\r\n\r\n\r\n        onClickListener();\r\n\r\n        showPopUpCSC(editText_fatherCountry, \"FatherCountry\");\r\n        showPopUpCSC(editText_fatherState, \"FatherState\");\r\n        showPopUpCSC(editText_fatherCity, \"FatherCity\");\r\n\r\n        /*showPopupSDT(editText_fatherState, \"FatherState\", null);\r\n        showPopupSDT(editText_fatherDistrict, \"FatherDistrict\", textView_fatherStateId);\r\n        showPopupSDT(editText_fatherTaluka, \"FatherTaluka\", textView_fatherDistrictId);\r\n        textChangedListener(editText_fatherState, editText_fatherDistrict, editText_fatherTaluka,\r\n                textView_fatherStateId, textView_fatherDistrictId, textView_fatherTalukaId);\r\n*/\r\n\r\n        return view;\r\n    }\r\n\r\n\r\n    private void showPopUpCSC(final EditText editText, final String urlFor)\r\n    {\r\n        editText.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                AsyncTaskLoad runner = new AsyncTaskLoad();\r\n\r\n                String id=\"\";\r\n\r\n                if(urlFor.equals(\"Country\"))\r\n                {\r\n\r\n                }\r\n                else if(urlFor.equals(\"State\"))\r\n                {\r\n                    id =  textView_fatherCountryId.getText().toString();\r\n                    if(id.equals(\"0\"))\r\n                    {\r\n                        Toast.makeText(context, \"Please select Country first\", Toast.LENGTH_SHORT).show();\r\n                        return;\r\n                    }\r\n\r\n                }\r\n\r\n                else if(urlFor.equals(\"City\"))\r\n                {\r\n                    id = textView_fatherStateId.getText().toString();\r\n                    if(id.equals(\"0\"))\r\n                    {\r\n                        Toast.makeText(context, \"Please select State first\", Toast.LENGTH_SHORT).show();\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                runner.execute(urlFor, id);\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    public void showPopupSDT(EditText editText, final String urlFor, final TextView textView_id)\r\n    {\r\n        editText.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n\r\n                String id=\"0\";\r\n\r\n                if(textView_id!=null) {\r\n                    id = textView_id.getText().toString();\r\n\r\n                    if(id.equals(\"0\"))\r\n                    {\r\n                        if(urlFor.contains(\"District\")) {\r\n                            Toast.makeText(getContext(), \"Select State first\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                        else if(urlFor.contains(\"Taluka\"))\r\n                        {\r\n                            Toast.makeText(getContext(), \"Select District first\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                }\r\n\r\n\r\n\r\n                AsyncTaskLoad runner =  new AsyncTaskLoad();\r\n                runner.execute(urlFor, id);\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    private void textChangedListener(EditText editText_state, final EditText editText_district,\r\n                                     final EditText editText_taluka, TextView textView_stateId,\r\n                                     final TextView textView_districtId, final TextView textView_talukaId)\r\n    {\r\n\r\n        editText_state.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {\r\n                editText_district.setText(\"\");\r\n                textView_districtId.setText(\"0\");\r\n                editText_taluka.setText(\"\");\r\n                textView_talukaId.setText(\"0\");\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable editable) {\r\n\r\n            }\r\n        });\r\n\r\n        editText_district.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {\r\n                editText_taluka.setText(\"\");\r\n                textView_talukaId.setText(\"0\");\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable editable) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    public void onClickListener()\r\n    {\r\n\r\n        radioGroup_motherServiceType.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(RadioGroup radioGroup, int id) {\r\n\r\n                if(id==R.id.radioButton_serviceWoman){\r\n\r\n                    textInputLayout_motherOccupation.setVisibility(View.VISIBLE);\r\n                    textInputLayout_motherOccupation.requestFocus();\r\n                }\r\n                else if(id==R.id.radioButton_housewife){\r\n\r\n                    textInputLayout_motherOccupation.setVisibility(View.GONE);\r\n                    editText_motherOccupation.setText(\"\");\r\n                    editText_motherOccupation.clearFocus();\r\n                    textView_motherOccupationId.setText(\"0\");\r\n\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n        imageView_addVehicle.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                CustomDialogAddVehicle customDialogAddVehicle = new CustomDialogAddVehicle(getContext(), \"0\", \"0\",\r\n                        addPersonAdapter_vehicle, addPersonModelArrayList_vehicle, 0);\r\n                customDialogAddVehicle.show();\r\n\r\n            }\r\n        });\r\n\r\n\r\n        imageView_addProperty.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                CustomDialogAddProperty customDialogAddProperty = new CustomDialogAddProperty(getContext(), \"0\", \"0\",\r\n                        addPersonAdapter_property, addPersonModelArrayList_property, 0);\r\n                customDialogAddProperty.show();\r\n\r\n            }\r\n        });\r\n\r\n        imageView_addFarm.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                CustomDialogAddFarm customDialogAddFarm = new CustomDialogAddFarm(getContext(), \"0\", \"0\",\r\n                        addPersonAdapter_farm, addPersonModelArrayList_farm, 0);\r\n\r\n                customDialogAddFarm.show();\r\n\r\n            }\r\n        });\r\n\r\n        imageView_back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                FragmentManager fragmentManager = getFragmentManager();\r\n\r\n                if(fragmentManager.getBackStackEntryCount()>0)\r\n                {\r\n                    fragmentManager.popBackStack();\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        imageView_addSibling.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                customDialogAddSibling = new CustomDialogAddSibling(getContext(), \"0\", \"0\",\r\n                        addPersonAdapter_sibling, addPersonModelArrayList_sibling, 0);\r\n                customDialogAddSibling.show();\r\n\r\n            }\r\n        });\r\n\r\n\r\n        imageView_addMama.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                customDialogAddMama = new CustomDialogAddMama(getContext(), \"0\", \"0\",\r\n                        addPersonAdapter_mama, addPersonModelArrayList_mama, 0);\r\n                customDialogAddMama.show();\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n        textView_saveAndContinue.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                AsyncTaskLoad runner = new AsyncTaskLoad();\r\n                runner.execute(\"insertDetails\");\r\n/*\r\n                fatherName = editText_fatherName.getText().toString();\r\n                fatherMobileNo = editText_fatherMobileNo.getText().toString();\r\n                fatherOccupationId = editText_fatherOccupation.getText().toString();\r\n                fatherAnnualIncome= editText_fatherAnnualIncome.getText().toString();\r\n                //fatherProperty= editText_fatherProperty.getText().toString();\r\n                fatherAddress= editText_fatherAddress.getText().toString();\r\n                motherName= editText_motherName.getText().toString();\r\n                motherMobileNo= editText_motherMobileNo.getText().toString();\r\n                motherOccupation= editText_motherOccupation.getText().toString();\r\n                motherAnnualIncome= editText_motherAnnualIncome.getText().toString();\r\n\r\n                relative1= editText_relative1.getText().toString();*/\r\n                /*relative2= editText_relative2.getText().toString();\r\n                relative3= editText_relative3.getText().toString();\r\n                relative4= editText_relative4.getText().toString();*/\r\n\r\n                /*= view.findViewById(R.id.);\r\n                = view.findViewById(R.id.);*/\r\n\r\n\r\n\r\n\r\n/*                if(bundle!=null)\r\n                {\r\n                    bulinearlayout_addMoreFarmndle.putString(\"fatherName\",fatherName);\r\n                    bundle.putString(\"fatherMobileNo\",fatherMobileNo);\r\n                    bundle.putString(\"fatherOccupation\",fatherOccupationId);\r\n                    bundle.putString(\"fatherAnnualIncome\",fatherAnnualIncome);\r\n\r\n\r\n                }*/\r\n\r\n\r\n/*                bundle.putString(\"\",);\r\n                bundle.putString(\"\",);*/\r\n\r\n                QualificationDetailsFragment qualificationDetailsFragment = new QualificationDetailsFragment();\r\n                //qualificationDetailsFragment.setArguments(bundle);\r\n\r\n                FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction();\r\n                fragmentTransaction.addToBackStack(null);\r\n                fragmentTransaction.replace(R.id.dynamic_fragment_frame_layout, qualificationDetailsFragment);\r\n                fragmentTransaction.commit() ;\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    private void showPopup(EditText editText, final String urlFor)\r\n    {\r\n        editText.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                AsyncTaskLoad runner = new AsyncTaskLoad();\r\n                runner.execute(urlFor);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    void insertDetails()\r\n    {\r\n        final String father_isAlive = checkBox_fatherIsAlive.isChecked()? \"1\" : \"0\";\r\n        fatherName = editText_fatherName.getText().toString().trim();\r\n        fatherMobileNo = editText_fatherMobileNo.getText().toString().trim();\r\n        fatherQualificationId = textView_fatherQualificationId.getText().toString().trim();\r\n        fatherOccupationId = textView_fatherOccupationId.getText().toString().trim();\r\n        //fatherAnnualIncome = editText_fatherAnnualIncome.getText().toString().trim();\r\n        //fatherProperty= editText_fatherProperty.getText().toString();\r\n        fatherAddress = editText_fatherAddress.getText().toString().trim();\r\n        fatherStateId = textView_fatherStateId.getText().toString().trim();\r\n        fatherCountryId = textView_fatherCountryId.getText().toString().trim();\r\n        fatherCityId = textView_fatherCityId.getText().toString().trim();\r\n\r\n        final String mother_isAlive = checkBox_motherIsAlive.isChecked()? \"1\" : \"0\";\r\n        motherName = editText_motherName.getText().toString().trim();\r\n        motherMobileNo = editText_motherMobileNo.getText().toString().trim();\r\n        motherQualificationId = textView_motherQualificationId.getText().toString().trim();\r\n        motherOccupation = textView_motherOccupationId.getText().toString().trim();\r\n        familyIncome = textView_familyIncome.getText().toString().trim();\r\n        //motherAnnualIncome= editText_motherAnnualIncome.getText().toString().trim();\r\n\r\n        relative1 = editText_relative1.getText().toString().trim();\r\n        relative2 = editText_relative2.getText().toString().trim();\r\n        relative3 = editText_relative3.getText().toString().trim();\r\n        relative4 = editText_relative4.getText().toString().trim();\r\n\r\n        final int noOfBrothers = sqLiteSiblingDetails.getNoOfSibling(\"Brother\");\r\n        final int noOfSisters = sqLiteSiblingDetails.getNoOfSibling(\"Sister\");\r\n        final int noOfMama = sqLiteMamaDetails.getNoOfMama();\r\n\r\n\r\n        // Sibling XML\r\n        stringBuilder_sibling.append(\"<?xml version=\\\"1.0\\\" ?>\");\r\n\r\n        stringBuilder_sibling.append(\"<Assign>\");\r\n\r\n        Cursor cursor_sibling = sqLiteSiblingDetails.getAllData();\r\n\r\n\r\n\r\n        if(cursor_sibling!=null)\r\n        {\r\n            for (boolean hasItem = cursor_sibling.moveToFirst(); hasItem; hasItem = cursor_sibling.moveToNext()) {\r\n\r\n                stringBuilder_sibling.append(\"<Functions>\");\r\n\r\n                //stringBuilder_sibling.append(\"<UserId>\"+userModel.getUserId()+\"</UserId>\");\r\n                stringBuilder_sibling.append(\"<SiblingDetailsId>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.SIBLING_DETAILS_ID)) + \"</SiblingDetailsId>\");\r\n                stringBuilder_sibling.append(\"<SiblingListId>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.RELATION_ID)) + \"</SiblingListId>\");\r\n                stringBuilder_sibling.append(\"<SiblingName>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.NAME)) + \"</SiblingName>\");\r\n                stringBuilder_sibling.append(\"<SiblingSpouseName>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.NAME)) + \"</SiblingSpouseName>\");\r\n                stringBuilder_sibling.append(\"<SiblingMobileNo>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.MOBILE_NO)) + \"</SiblingMobileNo>\");\r\n                stringBuilder_sibling.append(\"<SiblingQualificationId>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.EDUCATION_ID)) + \"</SiblingQualificationId>\");\r\n                stringBuilder_sibling.append(\"<SiblingOccupationId>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.OCCUPATION_ID)) + \"</SiblingOccupationId>\");\r\n                stringBuilder_sibling.append(\"<SiblingMaritalStatus>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.MARITAL_STATUS)) + \"</SiblingMaritalStatus>\");\r\n                stringBuilder_sibling.append(\"<InLawsFullName>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_NAME)) + \"</InLawsFullName>\");\r\n                stringBuilder_sibling.append(\"<InLawsMobileNo>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_MOBILE_NO)) + \"</InLawsMobileNo>\");\r\n                stringBuilder_sibling.append(\"<InLawsAddress>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_VILLAGE)) + \"</InLawsAddress>\");\r\n                stringBuilder_sibling.append(\"<InLawsCountryId>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_VILLAGE)) + \"</InLawsCountryId>\");\r\n                stringBuilder_sibling.append(\"<InLawsStateId>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_VILLAGE)) + \"</InLawsStateId>\");\r\n                stringBuilder_sibling.append(\"<InLawsCityId>\" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_VILLAGE)) + \"</InLawsCityId>\");\r\n                stringBuilder_sibling.append(\"<SiblingLanguage>\" + userModel.getLanguage() + \"</SiblingLanguage>\");\r\n\r\n\r\n                stringBuilder_sibling.append(\"</Functions>\");\r\n\r\n            }\r\n\r\n            stringBuilder_sibling.append(\"</Assign>\");\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        // Property XML\r\n\r\n        stringBuilder_property.append(\"<?xml version=\\\"1.0\\\" ?>\");\r\n        stringBuilder_property.append(\"<Assign>\");\r\n\r\n        Cursor cursor_property = sqLitePropertyDetails.getAllData();\r\n\r\n        if(cursor_property!=null)\r\n        {\r\n\r\n            for (boolean hasItem = cursor_property.moveToFirst(); hasItem; hasItem = cursor_property.moveToNext()) {\r\n\r\n                stringBuilder_property.append(\"<Functions>\");\r\n\r\n\r\n                stringBuilder_property.append(\"<PropertyDetailsId>\"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.PROPERTY_DETAILS_ID))+\"</PropertyDetailsId>\");\r\n                stringBuilder_property.append(\"<PropertyTypeId>\"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.PROPERTY_TYPE_ID))+\"</PropertyTypeId>\");\r\n                stringBuilder_property.append(\"<PropertyOwnershipType>\"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.OWNERSHIP_TYPE))+\"</PropertyOwnershipType>\");\r\n                stringBuilder_property.append(\"<PropertyBHKType>\"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.BHK_TYPE_ID))+\"</PropertyBHKType>\");\r\n                stringBuilder_property.append(\"<PropertyArea>\"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.CARPET_AREA))+\"</PropertyArea>\");\r\n                stringBuilder_property.append(\"<PropertyAddress>\"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.ADDRESS))+\"</PropertyAddress>\");\r\n                stringBuilder_property.append(\"<PropertyCountryId>\"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.COUNTRY_ID))+\"</PropertyCountryId>\");\r\n                stringBuilder_property.append(\"<PropertyStateId>\"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.STATE_ID))+\"</PropertyStateId>\");\r\n                stringBuilder_property.append(\"<PropertyCityId>\"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.CITY_ID))+\"</PropertyCityId>\");\r\n                stringBuilder_property.append(\"<PropertyLanguage>\"+userModel.getLanguage()+\"</PropertyLanguage>\");\r\n\r\n                stringBuilder_property.append(\"</Functions>\");\r\n\r\n            }\r\n\r\n            stringBuilder_property.append(\"</Assign>\");\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        //Mama XML\r\n        stringBuilder_mama.append(\"<?xml version=\\\"1.0\\\" ?>\");\r\n        stringBuilder_mama.append(\"<Assign>\");\r\n\r\n        Cursor cursor_mama = sqLiteMamaDetails.getAllData();\r\n\r\n        if(cursor_mama!=null)\r\n        {\r\n\r\n            for (boolean hasItem = cursor_mama.moveToFirst(); hasItem; hasItem = cursor_mama.moveToNext()) {\r\n\r\n                stringBuilder_mama.append(\"<Functions>\");\r\n\r\n                stringBuilder_mama.append(\"<MamaIsAlive>\"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.IS_ALIVE))+\"</MamaIsAlive>\");\r\n                stringBuilder_mama.append(\"<MamaFullname>\"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.NAME))+\"</MamaFullname>\");\r\n                stringBuilder_mama.append(\"<MamaMobileNo>\"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.MOBILE_NO))+\"</MamaMobileNo>\");\r\n                stringBuilder_mama.append(\"<MamaAddress>\"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.ADDRESS))+\"</MamaAddress>\");\r\n                stringBuilder_mama.append(\"<MamaCountryId>\"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.COUNTRY_ID))+\"</MamaCountryId>\");\r\n                stringBuilder_mama.append(\"<MamaStateId>\"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.STATE_ID))+\"</MamaStateId>\");\r\n                stringBuilder_mama.append(\"<MamaCityId>\"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.CITY_ID))+\"</MamaCityId>\");\r\n                stringBuilder_mama.append(\"<MamaOccupationId>\"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.OCCUPATION_ID))+\"</MamaOccupationId>\");\r\n                stringBuilder_mama.append(\"<MamaLanguageType>\"+userModel.getLanguage()+\"</MamaLanguageType>\");\r\n\r\n                stringBuilder_mama.append(\"</Functions>\");\r\n\r\n            }\r\n\r\n\r\n            stringBuilder_mama.append(\"</Assign>\");\r\n\r\n        }\r\n\r\n\r\n        //Farm XML\r\n        stringBuilder_farm.append(\"<?xml version=\\\"1.0\\\" ?>\");\r\n        stringBuilder_farm.append(\"<Assign>\");\r\n\r\n        Cursor cursor_farm = sqLiteFarmDetails.getAllData();\r\n\r\n\r\n        if(cursor_farm!=null)\r\n        {\r\n\r\n            for (boolean hasItem = cursor_farm.moveToFirst(); hasItem; hasItem = cursor_farm.moveToNext()) {\r\n\r\n                stringBuilder_farm.append(\"<Functions>\");\r\n\r\n                stringBuilder_farm.append(\"<FarmDetailsId>\"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.FARM_DETAILS_ID))+\"</FarmDetailsId>\");\r\n                stringBuilder_farm.append(\"<FarmArea>\"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.AREA))+\"</FarmArea>\");\r\n                stringBuilder_farm.append(\"<FullOrPart>\"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.TYPE))+\"</FullOrPart>\");\r\n                stringBuilder_farm.append(\"<CropTaken>\"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.CROPS))+\"</CropTaken>\");\r\n                stringBuilder_farm.append(\"<FarmType>\"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.IRRIGATION_TYPE))+\"</FarmType>\");\r\n                stringBuilder_farm.append(\"<FarmType>\"+userModel.getLanguage()+\"</FarmType>\");\r\n                stringBuilder_farm.append(\"<FarmLanguage>\"+userModel.getLanguage()+\"</FarmLanguage>\");\r\n\r\n                stringBuilder_farm.append(\"</Functions>\");\r\n\r\n            }\r\n\r\n            stringBuilder_farm.append(\"</Assign>\");\r\n\r\n        }\r\n\r\n        cursor_farm.close();\r\n        cursor_mama.close();\r\n        cursor_property.close();\r\n        cursor_sibling.close();\r\n\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST,\r\n                URLs.URL_POST_FAMILYDETAILS,\r\n                new Response.Listener<String>() {\r\n                    @Override\r\n                    public void onResponse(String response) {\r\n\r\n                        try {\r\n\r\n                            //converting response to json object\r\n                            JSONObject jsonObject = new JSONObject(response);\r\n\r\n                            if(jsonObject.getString(\"message\").equals(\"Success\") &&\r\n                                    !jsonObject.getBoolean(\"error\"))\r\n                            {\r\n                                //getDetails();\r\n\r\n                                Toast.makeText(context,\"Family details saved successfully!\", Toast.LENGTH_SHORT).show();\r\n\r\n/*                                QualificationDetailsFragment qualificationDetailsFragment = new QualificationDetailsFragment();\r\n                                //qualificationDetailsFragment.setArguments(bundle);\r\n\r\n                                FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction();\r\n                                fragmentTransaction.addToBackStack(null);\r\n                                fragmentTransaction.replace(R.id.dynamic_fragment_frame_layout, qualificationDetailsFragment);\r\n                                fragmentTransaction.commit();\r\n*/\r\n\r\n\r\n                            }\r\n                            else\r\n                            {\r\n                                Toast.makeText(getContext(),jsonObject.getString(\"message\").toString(),Toast.LENGTH_SHORT).show();\r\n                            }\r\n\r\n\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n                    }\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        Toast.makeText(getContext(),\"Something went wrong POST ! \",Toast.LENGTH_SHORT).show();\r\n                        error.printStackTrace();\r\n                    }\r\n                }) {\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                params.put(\"FamilyDetailsId\",String.valueOf(familyDetailsId));\r\n                params.put(\"UserId\",userModel.getUserId());\r\n                params.put(\"FatherDetailsId\",String.valueOf(fatherDetailsId));\r\n                params.put(\"FatherIsAlive\",father_isAlive);\r\n                params.put(\"FatherFullname\",fatherName);\r\n                params.put(\"FatherMobileNo\",fatherMobileNo);\r\n                params.put(\"FatherAddress\",fatherAddress);\r\n                params.put(\"FatherStateId\",fatherStateId);\r\n                params.put(\"FatherCountryId\",fatherCountryId);\r\n                params.put(\"FatherCityId\",fatherCityId);\r\n                params.put(\"FatherQualificationId\",fatherQualificationId);\r\n                params.put(\"FatherOccupationId\",fatherOccupationId);\r\n                //params.put(\"FatherAnnualIncome\",fatherAnnualIncome);\r\n                params.put(\"FatherLanguageType\",userModel.getLanguage());\r\n                params.put(\"MotherDetailsId\",String.valueOf(motherDetailsId));\r\n                params.put(\"MotherIsAlive\",mother_isAlive);\r\n                params.put(\"MotherFullname\",motherName);\r\n                params.put(\"MotherMobileNo\",motherMobileNo);\r\n                params.put(\"MotherQualificationId\",motherQualificationId);\r\n                params.put(\"MotherOccupationId\",motherOccupation);\r\n                //params.put(\"MotherAnnualIncome\",motherAnnualIncome);\r\n                params.put(\"MotherLanguageType\",userModel.getLanguage());\r\n                params.put(\"NoOfBrothers\",String.valueOf(noOfBrothers));\r\n                params.put(\"NoOfSisters\",String.valueOf(noOfSisters));\r\n                params.put(\"NoOfMama\",String.valueOf(noOfMama));\r\n                params.put(\"SalaryPackageId\",textView_familyIncome.getText().toString());\r\n                params.put(\"Surname1\", relative1);\r\n                params.put(\"Surname2\", relative2);\r\n                params.put(\"Surname3\", relative3);\r\n                params.put(\"Surname4\", relative4);\r\n                params.put(\"HousePropertyDetailsAPI\",stringBuilder_property.toString());\r\n                params.put(\"FarmPropertyDetailsAPI\",stringBuilder_farm.toString());\r\n                params.put(\"SiblingsDetailsAPI\",stringBuilder_sibling.toString());\r\n                params.put(\"MamaDetailsAPI\",stringBuilder_mama.toString());\r\n                params.put(\"LanguageType\",userModel.getLanguage());\r\n\r\n                return params;\r\n            }\r\n        };\r\n\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(0,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n\r\n        VolleySingleton.getInstance(getContext()).addToRequestQueue(stringRequest);\r\n\r\n    }\r\n\r\n\r\n\r\n    void getDetails()\r\n    {\r\n\r\n        StringRequest stringRequest = new StringRequest(Request.Method.GET,\r\n                URLs.URL_GET_FAMILYDETAILS+\"UserId=\"+userModel.getUserId()+\"&Language=\"+userModel.getLanguage(),\r\n                new Response.Listener<String>() {\r\n                    @Override\r\n                    public void onResponse(String response) {\r\n\r\n                        try {\r\n\r\n                            customDialogLoadingProgressBar.dismiss();\r\n\r\n                            //converting response to json object\r\n                            JSONArray jsonArray = new JSONArray(response);\r\n\r\n                            if(jsonArray.length()>0)\r\n                            {\r\n                                JSONObject jsonObject = jsonArray.getJSONObject(0);\r\n\r\n                                if(!jsonObject.getBoolean(\"error\"))\r\n                                {\r\n                                    familyDetailsId = jsonObject.getInt(\"FamilyDetailsId\");\r\n                                    fatherDetailsId = jsonObject.getInt(\"FatherStatesIDAPI\");\r\n                                    motherDetailsId = jsonObject.getInt(\"MotherDetailsIdAPI\");\r\n\r\n\r\n                                    checkBox_fatherIsAlive.setChecked(jsonObject.getString(\"IsAliveFather\").equals(\"1\"));\r\n\r\n                                    editText_fatherName.setText(jsonObject.getString(\"FullnameFather\"));\r\n                                    editText_fatherMobileNo.setText(jsonObject.getString(\"MobileNoFather\"));\r\n                                    editText_fatherAddress.setText(jsonObject.getString(\"AddressFather\"));\r\n\r\n                                    //editText_fatherAnnualIncome.setText(jsonObject.getString(\"AnnualIncomeFather\"));\r\n\r\n                                   // textView_fatherStateId.setText(jsonObject.getString(\"FatherStatesIDAPI\"));\r\n                                    //textView_fatherDistrictId.setText(jsonObject.getString(\"FatherDistrictIdAPI\"));\r\n                                    //textView_fatherTalukaId.setText(jsonObject.getString(\"FatherTalukasIdAPI\"));\r\n\r\n                                    editText_fatherState.setText(jsonObject.getString(\"StatesNameFather\"));\r\n                                    //editText_fatherDistrict.setText(jsonObject.getString(\"DistrictNameFather\"));\r\n                                    //editText_fatherTaluka.setText(jsonObject.getString(\"TalukaNameFather\"));\r\n\r\n                                    textView_fatherQualificationId.setText(jsonObject.getString(\"FatherQualificationIdAPI\"));\r\n                                    textView_fatherOccupationId.setText(jsonObject.getString(\"FatherOccupationIdAPI\"));\r\n\r\n                                    editText_fatherQualification.setText(jsonObject.getString(\"QualificationFather\"));\r\n                                    editText_fatherOccupation.setText(jsonObject.getString(\"OccupationNameFather\"));\r\n\r\n\r\n                                    checkBox_motherIsAlive.setChecked(jsonObject.getString(\"IsAliveMother\").equals(\"1\"));\r\n\r\n\r\n                                    editText_motherName.setText(jsonObject.getString(\"FullnameMother\"));\r\n                                    editText_motherMobileNo.setText(jsonObject.getString(\"MobileNoMother\"));\r\n                                    editText_motherQualification.setText(jsonObject.getString(\"QualificationMother\"));\r\n                                    editText_motherOccupation.setText(jsonObject.getString(\"OccupationNameMother\"));\r\n\r\n                                    textView_motherQualificationId.setText(jsonObject.getString(\"MotherQualificationIdAPI\"));\r\n                                    textView_motherOccupationId.setText(jsonObject.getString(\"MotherOccupationIdAPI\"));\r\n\r\n                                    //editText_motherAnnualIncome.setText(jsonObject.getString(\"AnnualIncomeMother\"));\r\n                                 //   editText_familyIncome.setText(jsonObject.getString(\"SalaryPackageName\"));\r\n                                    textView_familyIncome.setText(jsonObject.getString(\"SalaryPackageId\"));\r\n\r\n                                    editText_relative1.setText(jsonObject.getString(\"Surname1\"));\r\n                                    editText_relative2.setText(jsonObject.getString(\"Surname2\"));\r\n                                    editText_relative3.setText(jsonObject.getString(\"Surname3\"));\r\n                                    editText_relative4.setText(jsonObject.getString(\"Surname4\"));\r\n\r\n\r\n                                    textView_fatherCountryId.setText(jsonObject.getString(\"FatherCountryId\"));\r\n                                    textView_fatherStateId.setText(jsonObject.getString(\"FatherStateId\"));\r\n                                    textView_fatherCityId.setText(jsonObject.getString(\"FatherCityId\"));\r\n\r\n                                    editText_fatherCountry.setText(jsonObject.getString(\"FatherCountryName\"));\r\n                                    editText_fatherState.setText(jsonObject.getString(\"FatherStateName\"));\r\n                                    editText_fatherCity.setText(jsonObject.getString(\"FatherCityName\"));\r\n\r\n                                    sqLiteMamaDetails.deleteAll();\r\n                                    addPersonModelArrayList_mama.clear();\r\n                                    addPersonAdapter_mama.notifyDataSetChanged();\r\n                                    JSONArray jsonArray_mamaDetails = jsonObject.getJSONArray(\"MamaDetailsLST\");\r\n\r\n\r\n                                    for(int j=0; j< jsonArray_mamaDetails.length(); j++)\r\n                                    {\r\n\r\n                                        JSONObject jsonObject_details = jsonArray_mamaDetails.getJSONObject(j);\r\n\r\n\r\n                                        long id = sqLiteMamaDetails.insertMamaDetails(\r\n                                                jsonObject_details.getString(\"MamaDetailsId\"),\r\n                                                jsonObject_details.getString(\"MamaFullnameAPI\"),\r\n                                                jsonObject_details.getString(\"MamaMobileNoAPI\"),\r\n                                                jsonObject_details.getString(\"OccupationIdMama\"),\r\n                                                jsonObject_details.getString(\"OccupationNameMama\"),\r\n                                                jsonObject_details.getString(\"MamaAddressAPI\"),\r\n                                                jsonObject_details.getString(\"MamaCountryName\"),\r\n                                                jsonObject_details.getString(\"MamaCountryId\"),\r\n                                                jsonObject_details.getString(\"MamaStateName\"),\r\n                                                jsonObject_details.getString(\"MamaStateId\"),\r\n                                                jsonObject_details.getString(\"MamaCityName\"),\r\n                                                jsonObject_details.getString(\"MamaCityId\"),\r\n                                                jsonObject_details.getString(\"IsAliveMama\"));\r\n\r\n\r\n                                        addPersonModelArrayList_mama.add(new AddPersonModel(String.valueOf(id),\r\n                                                jsonObject_details.getString(\"MamaDetailsId\"),\r\n                                                jsonObject_details.getString(\"MamaFullnameAPI\"),\r\n                                                jsonObject_details.getString(\"MamaAddressAPI\")));\r\n\r\n\r\n\r\n\r\n                                    }\r\n\r\n\r\n\r\n                                    sqLitePropertyDetails.deleteAll();\r\n\r\n\r\n                                    sqLiteSiblingDetails.deleteAll();\r\n                                    addPersonModelArrayList_sibling.clear();\r\n                                    addPersonAdapter_sibling.notifyDataSetChanged();\r\n\r\n                                    JSONArray jsonArray_siblingDetails = jsonObject.getJSONArray(\"SiblingsDetailsLST\");\r\n\r\n                                    for(int j=0; j< jsonArray_siblingDetails.length(); j++)\r\n                                    {\r\n                                        JSONObject jsonObject_details = jsonArray_siblingDetails.getJSONObject(j);\r\n\r\n\r\n                                        long id = sqLiteSiblingDetails.insertSibling(\r\n                                                jsonObject_details.getString(\"SiblingsDetailsId\"),\r\n                                                jsonObject_details.getString(\"SiblingsFullname\"),\r\n                                                jsonObject_details.getString(\"MobileNoSiblings\"),\r\n                                                jsonObject_details.getString(\"QualificationIdSiblings\"),\r\n                                                jsonObject_details.getString(\"QualificationSiblings\"),\r\n                                                jsonObject_details.getString(\"OccupationIdSiblings\"),\r\n                                                jsonObject_details.getString(\"OccupationNameSiblings\"),\r\n                                                jsonObject_details.getString(\"MaritalStatus\"),\r\n                                                jsonObject_details.getString(\"SiblingListIdAPI\"),\r\n                                                jsonObject_details.getString(\"SiblingSpouseName\"),\r\n                                                jsonObject_details.getString(\"SiblingSpouseName\"), //change-> should be replaced with spouse Name\r\n                                                jsonObject_details.getString(\"InLawsFullNameAPI\"),\r\n                                                jsonObject_details.getString(\"InLawsMobileNoAPI\"),\r\n                                                jsonObject_details.getString(\"InLawsAddressAPI\"),\r\n                                                jsonObject_details.getString(\"SiblingListIdAPI\"),\r\n                                                jsonObject_details.getString(\"SiblingListIdAPI\"),\r\n                                                jsonObject_details.getString(\"SiblingListIdAPI\"),\r\n                                                jsonObject_details.getString(\"SiblingListIdAPI\"),\r\n                                                jsonObject_details.getString(\"SiblingListIdAPI\"),\r\n                                                jsonObject_details.getString(\"SiblingListIdAPI\"));\r\n\r\n\r\n                                        addPersonModelArrayList_sibling.add(new AddPersonModel(String.valueOf(id),\r\n                                                jsonObject_details.getString(\"SiblingsDetailsId\"),\r\n                                                jsonObject_details.getString(\"SiblingsFullname\"),\r\n                                                jsonObject_details.getString(\"QualificationSiblings\")));\r\n\r\n\r\n\r\n\r\n\r\n                                    }\r\n\r\n\r\n\r\n                                    sqLiteFarmDetails.deleteAll();\r\n                                    addPersonModelArrayList_farm.clear();\r\n\r\n\r\n                                    JSONArray jsonArray_farmDetails = jsonObject.getJSONArray(\"FarmDetailsLST\");\r\n\r\n\r\n                                    for(int j=0; j< jsonArray_farmDetails.length(); j++) {\r\n                                        JSONObject jsonObject_details = jsonArray_farmDetails.getJSONObject(j);\r\n\r\n\r\n                                        long id = sqLiteFarmDetails.insertFarmDetails(\r\n                                                jsonObject_details.getString(\"FarmPropertyDetailsId\"),\r\n                                                jsonObject_details.getString(\"LandArea\"),\r\n                                                jsonObject_details.getString(\"FullOrPart\"),\r\n                                                jsonObject_details.getString(\"CropTaken\"),\"Irrigated\");\r\n\r\n\r\n                                        addPersonModelArrayList_farm.add(new AddPersonModel(String.valueOf(id),\r\n                                                jsonObject_details.getString(\"FarmPropertyDetailsId\"),\r\n                                                jsonObject_details.getString(\"LandArea\"),\r\n                                                jsonObject_details.getString(\"CropTaken\")));\r\n\r\n\r\n\r\n                                    }\r\n                                    addPersonAdapter_farm.notifyDataSetChanged();\r\n                                    //farmRecyclerView();\r\n\r\n\r\n                                }\r\n\r\n\r\n\r\n                            }\r\n                            else\r\n                            {\r\n                                familyDetailsId = 0;\r\n                                fatherDetailsId = 0;\r\n                                motherDetailsId = 0;\r\n                                customDialogLoadingProgressBar.dismiss();\r\n                                Toast.makeText(getContext(),\" Please enter your details! \",Toast.LENGTH_SHORT).show();\r\n                            }\r\n\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n                    }\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                     //   Toast.makeText(getContext(),\"Something went wrong POST ! \",Toast.LENGTH_SHORT).show();\r\n                        Toast.makeText(getContext(),error.toString(),Toast.LENGTH_SHORT).show();\r\n                        Log.e(\"Error\",error.toString());\r\n                    }\r\n                }) {\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<>();\r\n                return params;\r\n            }\r\n        };\r\n\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(0,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n\r\n        VolleySingleton.getInstance(getContext()).addToRequestQueue(stringRequest);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    public class AsyncTaskLoad extends AsyncTask<String, String, String> {\r\n\r\n        private String resp;\r\n\r\n\r\n\r\n        @Override\r\n        protected String doInBackground(String... params) {\r\n            publishProgress(\"Sleeping...\"); // Calls onProgressUpdate()\r\n\r\n            try {\r\n\r\n\r\n                if(params[0].equals(\"getDetails\"))\r\n                {\r\n                    getDetails();\r\n\r\n                }\r\n                else if(params[0].equals(\"insertDetails\"))\r\n                {\r\n                    insertDetails();\r\n                    //customDialogLoadingProgressBar.dismiss(); //after uncommenting above line remove this line\r\n                }\r\n\r\n\r\n\r\n                if(params[0].equals(\"FatherCountry\"))\r\n                {\r\n\r\n                    dataFetcher.loadList(URLs.URL_GET_COUNTRY+\"Language=\"+userModel.getLanguage(),\"Id\",\r\n                            \"Name\", editText_fatherCountry, textView_fatherCountryId,getContext(),\r\n                            customDialogLoadingProgressBar);\r\n\r\n\r\n                    return \"Country\";\r\n\r\n                }\r\n                else if(params[0].equals(\"FatherState\"))\r\n                {\r\n                    String id = textView_fatherCountryId.getText().toString();\r\n\r\n                    dataFetcher.loadList(URLs.URL_GET_STATE+\"Language=\"+userModel.getLanguage()\r\n                                    + \"&CountryID=\"+id,\"StatesID\", \"StatesName\",\r\n                            editText_fatherState, textView_fatherStateId,getContext(),\r\n                            customDialogLoadingProgressBar);\r\n\r\n\r\n\r\n                }\r\n                else if(params[0].equals(\"FatherCity\"))\r\n                {\r\n                    String id = textView_fatherStateId.getText().toString();\r\n\r\n                    dataFetcher.loadList(URLs.URL_GET_CITY+\"Language=\"+userModel.getLanguage()\r\n                                    + \"&StateID=\"+id,\"ID\",\r\n                            \"Name\", editText_fatherCity, textView_fatherCityId,getContext(),\r\n                            customDialogLoadingProgressBar);\r\n\r\n\r\n                }\r\n/*                if(params[0].equals(\"FatherState\"))\r\n                {\r\n                    dataFetcher.loadList(URLs.URL_GET_STATE+\"Language=\"+userModel.getLanguage(),\"StatesID\",\r\n                            \"StatesName\", editText_fatherState, textView_fatherStateId,getContext(), customDialogLoadingProgressBar);\r\n\r\n\r\n                }\r\n                else if(params[0].equals(\"FatherDistrict\"))\r\n                {\r\n                    String id = params[1];\r\n                    dataFetcher.loadList(URLs.URL_GET_DISTRICT+\"StatesID=\"+id+\"&Language=\"+userModel.getLanguage(),\r\n                            \"DistrictId\", \"DistrictName\", editText_fatherDistrict, textView_fatherDistrictId,\r\n                            getContext(), customDialogLoadingProgressBar);\r\n\r\n                }\r\n                else if(params[0].equals(\"FatherTaluka\"))\r\n                {\r\n\r\n                    String id = params[1];\r\n                    dataFetcher.loadList(URLs.URL_GET_TALUKA+\"DistrictId=\"+id+\"&Language=\"+userModel.getLanguage(),\r\n                            \"TalukasId\", \"TalukaName\", editText_fatherTaluka, textView_fatherTalukaId,\r\n                            getContext(), customDialogLoadingProgressBar);\r\n                }*/\r\n\r\n                if(params[0].equals(\"FatherQualification\"))\r\n                {\r\n                    dataFetcher.loadList(URLs.URL_GET_ALL_QUALIFICATIONNAME+\"Language=\"+userModel.getLanguage(),\r\n                            \"QualificationId\", \"Qualification\", editText_fatherQualification,\r\n                            textView_fatherQualificationId,getContext(), customDialogLoadingProgressBar);\r\n\r\n\r\n                }\r\n\r\n                if(params[0].equals(\"MotherQualification\"))\r\n                {\r\n                    dataFetcher.loadList(URLs.URL_GET_ALL_QUALIFICATIONNAME+\"Language=\"+userModel.getLanguage(),\r\n                            \"QualificationId\", \"Qualification\", editText_motherQualification,\r\n                            textView_motherQualificationId,getContext(), customDialogLoadingProgressBar);\r\n\r\n\r\n                }\r\n\r\n                if(params[0].equals(\"FatherOccupation\"))\r\n                {\r\n                    dataFetcher.loadList(URLs.URL_GET_OCCUPATION+\"Language=\"+userModel.getLanguage(),\r\n                            \"OccupationId\", \"OccupationName\", editText_fatherOccupation,\r\n                            textView_fatherOccupationId,getContext(), customDialogLoadingProgressBar);\r\n\r\n\r\n                }\r\n\r\n                else if(params[0].equals(\"MotherOccupation\"))\r\n                {\r\n                    dataFetcher.loadList(URLs.URL_GET_OCCUPATION+\"Language=\"+userModel.getLanguage(),\r\n                            \"OccupationId\", \"OccupationName\", editText_motherOccupation,\r\n                            textView_motherOccupationId,getContext(), customDialogLoadingProgressBar);\r\n\r\n\r\n                }\r\n\r\n                else if(params[0].equals(\"FamilyIncome\"))\r\n                {\r\n                    dataFetcher.loadList(URLs.URL_GET_SALARY+\"Language=\"+userModel.getLanguage(),\r\n                            \"SalaryPackageId\", \"SalaryPackageName\", editText_familyIncome,\r\n                            textView_familyIncome, getContext(), customDialogLoadingProgressBar);\r\n\r\n\r\n                }\r\n\r\n                return params[0];\r\n\r\n                        } catch (Exception e) {\r\n                e.printStackTrace();\r\n                resp = e.getMessage();\r\n            }\r\n            return resp;\r\n        }\r\n\r\n\r\n        @Override\r\n        protected void onPostExecute(String result) {\r\n\r\n            if(result.equals(\"Country\"))\r\n            {\r\n                newCountryId = Integer.parseInt(textView_fatherCountryId.getText().toString());\r\n                if (currentCountryId != newCountryId) {\r\n                    currentCountryId = newCountryId;\r\n                    Handler handler = new Handler();\r\n                    handler.post(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            textView_fatherStateId.setText(\"0\");\r\n                            editText_fatherState.setText(\"\");\r\n                            textView_fatherCityId.setText(\"0\");\r\n                            editText_fatherCity.setText(\"\");\r\n                        }\r\n                    });\r\n\r\n                }\r\n            }\r\n            else if(result.equals(\"State\"))\r\n            {\r\n                newStateId = Integer.parseInt(textView_fatherStateId.getText().toString());\r\n                if (currentStateId != newStateId) {\r\n                    currentStateId = newStateId;\r\n                    Handler handler = new Handler();\r\n                    handler.post(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            textView_fatherCityId.setText(\"0\");\r\n                            editText_fatherCity.setText(\"\");\r\n                        }\r\n                    });\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n\r\n            customDialogLoadingProgressBar = new CustomDialogLoadingProgressBar(getContext());\r\n            customDialogLoadingProgressBar.show();\r\n\r\n        }\r\n\r\n\r\n        @Override\r\n        protected void onProgressUpdate(String... text) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/matrimonyapp/fragment/FamilyDetailsFragment.java	(revision 1060ce3f44c0ef22b89ffdfb5bb74855ada03692)
+++ app/src/main/java/com/example/matrimonyapp/fragment/FamilyDetailsFragment.java	(date 1610434586803)
@@ -102,7 +102,8 @@
 
     Bundle bundle;
 
-    private StringBuilder stringBuilder_sibling, stringBuilder_mama, stringBuilder_property, stringBuilder_farm;
+    private StringBuilder stringBuilder_sibling, stringBuilder_mama, stringBuilder_property,
+            stringBuilder_farm, stringBuilder_vehicle;
 
     private DataFetcher dataFetcher;
 
@@ -235,6 +236,7 @@
         stringBuilder_mama = new StringBuilder();
         stringBuilder_property = new StringBuilder();
         stringBuilder_farm = new StringBuilder();
+        stringBuilder_vehicle = new StringBuilder();
 
 
 
@@ -685,155 +687,12 @@
         final int noOfMama = sqLiteMamaDetails.getNoOfMama();
 
 
-        // Sibling XML
-        stringBuilder_sibling.append("<?xml version=\"1.0\" ?>");
-
-        stringBuilder_sibling.append("<Assign>");
-
-        Cursor cursor_sibling = sqLiteSiblingDetails.getAllData();
-
-
-
-        if(cursor_sibling!=null)
-        {
-            for (boolean hasItem = cursor_sibling.moveToFirst(); hasItem; hasItem = cursor_sibling.moveToNext()) {
-
-                stringBuilder_sibling.append("<Functions>");
-
-                //stringBuilder_sibling.append("<UserId>"+userModel.getUserId()+"</UserId>");
-                stringBuilder_sibling.append("<SiblingDetailsId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.SIBLING_DETAILS_ID)) + "</SiblingDetailsId>");
-                stringBuilder_sibling.append("<SiblingListId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.RELATION_ID)) + "</SiblingListId>");
-                stringBuilder_sibling.append("<SiblingName>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.NAME)) + "</SiblingName>");
-                stringBuilder_sibling.append("<SiblingSpouseName>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.NAME)) + "</SiblingSpouseName>");
-                stringBuilder_sibling.append("<SiblingMobileNo>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.MOBILE_NO)) + "</SiblingMobileNo>");
-                stringBuilder_sibling.append("<SiblingQualificationId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.EDUCATION_ID)) + "</SiblingQualificationId>");
-                stringBuilder_sibling.append("<SiblingOccupationId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.OCCUPATION_ID)) + "</SiblingOccupationId>");
-                stringBuilder_sibling.append("<SiblingMaritalStatus>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.MARITAL_STATUS)) + "</SiblingMaritalStatus>");
-                stringBuilder_sibling.append("<InLawsFullName>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_NAME)) + "</InLawsFullName>");
-                stringBuilder_sibling.append("<InLawsMobileNo>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_MOBILE_NO)) + "</InLawsMobileNo>");
-                stringBuilder_sibling.append("<InLawsAddress>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_VILLAGE)) + "</InLawsAddress>");
-                stringBuilder_sibling.append("<InLawsCountryId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_VILLAGE)) + "</InLawsCountryId>");
-                stringBuilder_sibling.append("<InLawsStateId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_VILLAGE)) + "</InLawsStateId>");
-                stringBuilder_sibling.append("<InLawsCityId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_VILLAGE)) + "</InLawsCityId>");
-                stringBuilder_sibling.append("<SiblingLanguage>" + userModel.getLanguage() + "</SiblingLanguage>");
-
-
-                stringBuilder_sibling.append("</Functions>");
-
-            }
-
-            stringBuilder_sibling.append("</Assign>");
-
-
-        }
-
-
-
-        // Property XML
-
-        stringBuilder_property.append("<?xml version=\"1.0\" ?>");
-        stringBuilder_property.append("<Assign>");
-
-        Cursor cursor_property = sqLitePropertyDetails.getAllData();
-
-        if(cursor_property!=null)
-        {
-
-            for (boolean hasItem = cursor_property.moveToFirst(); hasItem; hasItem = cursor_property.moveToNext()) {
-
-                stringBuilder_property.append("<Functions>");
-
-
-                stringBuilder_property.append("<PropertyDetailsId>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.PROPERTY_DETAILS_ID))+"</PropertyDetailsId>");
-                stringBuilder_property.append("<PropertyTypeId>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.PROPERTY_TYPE_ID))+"</PropertyTypeId>");
-                stringBuilder_property.append("<PropertyOwnershipType>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.OWNERSHIP_TYPE))+"</PropertyOwnershipType>");
-                stringBuilder_property.append("<PropertyBHKType>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.BHK_TYPE_ID))+"</PropertyBHKType>");
-                stringBuilder_property.append("<PropertyArea>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.CARPET_AREA))+"</PropertyArea>");
-                stringBuilder_property.append("<PropertyAddress>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.ADDRESS))+"</PropertyAddress>");
-                stringBuilder_property.append("<PropertyCountryId>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.COUNTRY_ID))+"</PropertyCountryId>");
-                stringBuilder_property.append("<PropertyStateId>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.STATE_ID))+"</PropertyStateId>");
-                stringBuilder_property.append("<PropertyCityId>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.CITY_ID))+"</PropertyCityId>");
-                stringBuilder_property.append("<PropertyLanguage>"+userModel.getLanguage()+"</PropertyLanguage>");
-
-                stringBuilder_property.append("</Functions>");
-
-            }
-
-            stringBuilder_property.append("</Assign>");
-
-        }
-
-
-
-
-
-        //Mama XML
-        stringBuilder_mama.append("<?xml version=\"1.0\" ?>");
-        stringBuilder_mama.append("<Assign>");
-
-        Cursor cursor_mama = sqLiteMamaDetails.getAllData();
-
-        if(cursor_mama!=null)
-        {
-
-            for (boolean hasItem = cursor_mama.moveToFirst(); hasItem; hasItem = cursor_mama.moveToNext()) {
-
-                stringBuilder_mama.append("<Functions>");
-
-                stringBuilder_mama.append("<MamaIsAlive>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.IS_ALIVE))+"</MamaIsAlive>");
-                stringBuilder_mama.append("<MamaFullname>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.NAME))+"</MamaFullname>");
-                stringBuilder_mama.append("<MamaMobileNo>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.MOBILE_NO))+"</MamaMobileNo>");
-                stringBuilder_mama.append("<MamaAddress>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.ADDRESS))+"</MamaAddress>");
-                stringBuilder_mama.append("<MamaCountryId>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.COUNTRY_ID))+"</MamaCountryId>");
-                stringBuilder_mama.append("<MamaStateId>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.STATE_ID))+"</MamaStateId>");
-                stringBuilder_mama.append("<MamaCityId>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.CITY_ID))+"</MamaCityId>");
-                stringBuilder_mama.append("<MamaOccupationId>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.OCCUPATION_ID))+"</MamaOccupationId>");
-                stringBuilder_mama.append("<MamaLanguageType>"+userModel.getLanguage()+"</MamaLanguageType>");
+        createSiblingXML();
+        createPropertyXML();
+        createMamaXML();
+        createFarmXML();
+        createVehicleXML();
 
-                stringBuilder_mama.append("</Functions>");
-
-            }
-
-
-            stringBuilder_mama.append("</Assign>");
-
-        }
-
-
-        //Farm XML
-        stringBuilder_farm.append("<?xml version=\"1.0\" ?>");
-        stringBuilder_farm.append("<Assign>");
-
-        Cursor cursor_farm = sqLiteFarmDetails.getAllData();
-
-
-        if(cursor_farm!=null)
-        {
-
-            for (boolean hasItem = cursor_farm.moveToFirst(); hasItem; hasItem = cursor_farm.moveToNext()) {
-
-                stringBuilder_farm.append("<Functions>");
-
-                stringBuilder_farm.append("<FarmDetailsId>"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.FARM_DETAILS_ID))+"</FarmDetailsId>");
-                stringBuilder_farm.append("<FarmArea>"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.AREA))+"</FarmArea>");
-                stringBuilder_farm.append("<FullOrPart>"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.TYPE))+"</FullOrPart>");
-                stringBuilder_farm.append("<CropTaken>"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.CROPS))+"</CropTaken>");
-                stringBuilder_farm.append("<FarmType>"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.IRRIGATION_TYPE))+"</FarmType>");
-                stringBuilder_farm.append("<FarmType>"+userModel.getLanguage()+"</FarmType>");
-                stringBuilder_farm.append("<FarmLanguage>"+userModel.getLanguage()+"</FarmLanguage>");
-
-                stringBuilder_farm.append("</Functions>");
-
-            }
-
-            stringBuilder_farm.append("</Assign>");
-
-        }
-
-        cursor_farm.close();
-        cursor_mama.close();
-        cursor_property.close();
-        cursor_sibling.close();
 
         StringRequest stringRequest = new StringRequest(Request.Method.POST,
                 URLs.URL_POST_FAMILYDETAILS,
@@ -921,6 +780,7 @@
                 params.put("FarmPropertyDetailsAPI",stringBuilder_farm.toString());
                 params.put("SiblingsDetailsAPI",stringBuilder_sibling.toString());
                 params.put("MamaDetailsAPI",stringBuilder_mama.toString());
+                //params.put("VehicleDetailsAPI",stringBuilder_vehicle.toString());
                 params.put("LanguageType",userModel.getLanguage());
 
                 return params;
@@ -934,6 +794,206 @@
 
     }
 
+    private void createVehicleXML() {
+
+
+        //Vehicle XML
+        stringBuilder_vehicle.append("<?xml version=\"1.0\" ?>");
+        stringBuilder_vehicle.append("<Assign>");
+
+        Cursor cursor_vehicle = sqLiteVehicleDetails.getAllData();
+
+
+        if(cursor_vehicle!=null)
+        {
+
+            for (boolean hasItem = cursor_vehicle.moveToFirst(); hasItem; hasItem = cursor_vehicle.moveToNext()) {
+
+                stringBuilder_farm.append("<Functions>");
+
+                stringBuilder_farm.append("<VehicleDetailsId>"+cursor_vehicle.getString(cursor_vehicle.getColumnIndex(SQLiteVehicleDetails.VEHICLE_DETAILS_ID))+"</VehicleDetailsId>");
+                stringBuilder_farm.append("<VehicleTypeId>"+cursor_vehicle.getString(cursor_vehicle.getColumnIndex(SQLiteVehicleDetails.VEHICLE_TYPE_ID))+"</VehicleTypeId>");
+                stringBuilder_farm.append("<VehicleBrandId>"+cursor_vehicle.getString(cursor_vehicle.getColumnIndex(SQLiteVehicleDetails.BRAND_NAME_ID))+"</VehicleBrandId>");
+                stringBuilder_farm.append("<VehicleModelId>"+cursor_vehicle.getString(cursor_vehicle.getColumnIndex(SQLiteVehicleDetails.MODEL_NAME_ID))+"</VehicleModelId>");
+                stringBuilder_farm.append("<Year>"+cursor_vehicle.getString(cursor_vehicle.getColumnIndex(SQLiteVehicleDetails.YEAR))+"</Year>");
+                stringBuilder_farm.append("<Cost>"+cursor_vehicle.getString(cursor_vehicle.getColumnIndex(SQLiteVehicleDetails.COST))+"</Cost>");
+
+
+                stringBuilder_farm.append("</Functions>");
+
+            }
+
+            stringBuilder_farm.append("</Assign>");
+
+        }
+
+        cursor_vehicle.close();
+
+
+    }
+
+    private void createFarmXML() {
+
+        //Farm XML
+        stringBuilder_farm.append("<?xml version=\"1.0\" ?>");
+        stringBuilder_farm.append("<Assign>");
+
+        Cursor cursor_farm = sqLiteFarmDetails.getAllData();
+        if(cursor_farm!=null)
+        {
+
+            for (boolean hasItem = cursor_farm.moveToFirst(); hasItem; hasItem = cursor_farm.moveToNext()) {
+
+                stringBuilder_farm.append("<Functions>");
+
+                stringBuilder_farm.append("<FarmDetailsId>"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.FARM_DETAILS_ID))+"</FarmDetailsId>");
+                stringBuilder_farm.append("<FarmArea>"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.AREA))+"</FarmArea>");
+                stringBuilder_farm.append("<FullOrPart>"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.TYPE))+"</FullOrPart>");
+                stringBuilder_farm.append("<CropTaken>"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.CROPS))+"</CropTaken>");
+                stringBuilder_farm.append("<FarmType>"+cursor_farm.getString(cursor_farm.getColumnIndex(SQLiteFarmDetails.IRRIGATION_TYPE))+"</FarmType>");
+
+                stringBuilder_farm.append("<FarmLanguage>"+userModel.getLanguage()+"</FarmLanguage>");
+
+                stringBuilder_farm.append("</Functions>");
+
+            }
+
+            stringBuilder_farm.append("</Assign>");
+
+        }
+
+        cursor_farm.close();
+    }
+
+    private void createMamaXML() {
+
+
+        //Mama XML
+        stringBuilder_mama.append("<?xml version=\"1.0\" ?>");
+        stringBuilder_mama.append("<Assign>");
+
+        Cursor cursor_mama = sqLiteMamaDetails.getAllData();
+
+        if(cursor_mama!=null)
+        {
+
+            for (boolean hasItem = cursor_mama.moveToFirst(); hasItem; hasItem = cursor_mama.moveToNext()) {
+
+                stringBuilder_mama.append("<Functions>");
+
+                stringBuilder_mama.append("<MamaIsAlive>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.IS_ALIVE))+"</MamaIsAlive>");
+                stringBuilder_mama.append("<MamaFullname>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.NAME))+"</MamaFullname>");
+                stringBuilder_mama.append("<MamaMobileNo>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.MOBILE_NO))+"</MamaMobileNo>");
+                stringBuilder_mama.append("<MamaAddress>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.ADDRESS))+"</MamaAddress>");
+                stringBuilder_mama.append("<MamaCountryId>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.COUNTRY_ID))+"</MamaCountryId>");
+                stringBuilder_mama.append("<MamaStateId>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.STATE_ID))+"</MamaStateId>");
+                stringBuilder_mama.append("<MamaCityId>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.CITY_ID))+"</MamaCityId>");
+                stringBuilder_mama.append("<MamaOccupationId>"+cursor_mama.getString(cursor_mama.getColumnIndex(SQLiteMamaDetails.OCCUPATION_ID))+"</MamaOccupationId>");
+                stringBuilder_mama.append("<MamaLanguageType>"+userModel.getLanguage()+"</MamaLanguageType>");
+
+                stringBuilder_mama.append("</Functions>");
+
+            }
+
+
+            stringBuilder_mama.append("</Assign>");
+
+        }
+
+        cursor_mama.close();
+
+    }
+
+    private void createPropertyXML() {
+
+
+        // Property XML
+
+        stringBuilder_property.append("<?xml version=\"1.0\" ?>");
+        stringBuilder_property.append("<Assign>");
+
+        Cursor cursor_property = sqLitePropertyDetails.getAllData();
+
+        if(cursor_property!=null)
+        {
+
+            for (boolean hasItem = cursor_property.moveToFirst(); hasItem; hasItem = cursor_property.moveToNext()) {
+
+                stringBuilder_property.append("<Functions>");
+
+
+                stringBuilder_property.append("<PropertyDetailsId>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.PROPERTY_DETAILS_ID))+"</PropertyDetailsId>");
+                stringBuilder_property.append("<PropertyTypeId>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.PROPERTY_TYPE_ID))+"</PropertyTypeId>");
+                stringBuilder_property.append("<PropertyOwnershipType>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.OWNERSHIP_TYPE))+"</PropertyOwnershipType>");
+                stringBuilder_property.append("<PropertyBHKType>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.BHK_TYPE_ID))+"</PropertyBHKType>");
+                stringBuilder_property.append("<PropertyArea>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.CARPET_AREA))+"</PropertyArea>");
+                stringBuilder_property.append("<PropertyAddress>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.ADDRESS))+"</PropertyAddress>");
+                stringBuilder_property.append("<PropertyCountryId>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.COUNTRY_ID))+"</PropertyCountryId>");
+                stringBuilder_property.append("<PropertyStateId>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.STATE_ID))+"</PropertyStateId>");
+                stringBuilder_property.append("<PropertyCityId>"+cursor_property.getString(cursor_property.getColumnIndex(SQLitePropertyDetails.CITY_ID))+"</PropertyCityId>");
+                stringBuilder_property.append("<PropertyLanguage>"+userModel.getLanguage()+"</PropertyLanguage>");
+
+                stringBuilder_property.append("</Functions>");
+
+            }
+
+            stringBuilder_property.append("</Assign>");
+
+        }
+
+        cursor_property.close();
+
+
+
+    }
+
+    private void createSiblingXML() {
+
+        // Sibling XML
+        stringBuilder_sibling.append("<?xml version=\"1.0\" ?>");
+
+        stringBuilder_sibling.append("<Assign>");
+
+        Cursor cursor_sibling = sqLiteSiblingDetails.getAllData();
+
+
+
+        if(cursor_sibling!=null)
+        {
+            for (boolean hasItem = cursor_sibling.moveToFirst(); hasItem; hasItem = cursor_sibling.moveToNext()) {
+
+                stringBuilder_sibling.append("<Functions>");
+
+                //stringBuilder_sibling.append("<UserId>"+userModel.getUserId()+"</UserId>");
+                stringBuilder_sibling.append("<SiblingDetailsId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.SIBLING_DETAILS_ID)) + "</SiblingDetailsId>");
+                stringBuilder_sibling.append("<SiblingListId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.RELATION_ID)) + "</SiblingListId>");
+                stringBuilder_sibling.append("<SiblingName>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.NAME)) + "</SiblingName>");
+                stringBuilder_sibling.append("<SiblingSpouseName>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.NAME)) + "</SiblingSpouseName>");
+                stringBuilder_sibling.append("<SiblingMobileNo>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.MOBILE_NO)) + "</SiblingMobileNo>");
+                stringBuilder_sibling.append("<SiblingQualificationId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.EDUCATION_ID)) + "</SiblingQualificationId>");
+                stringBuilder_sibling.append("<SiblingOccupationId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.OCCUPATION_ID)) + "</SiblingOccupationId>");
+                stringBuilder_sibling.append("<SiblingMaritalStatus>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.MARITAL_STATUS)) + "</SiblingMaritalStatus>");
+                stringBuilder_sibling.append("<InLawsFullName>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_NAME)) + "</InLawsFullName>");
+                stringBuilder_sibling.append("<InLawsMobileNo>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_MOBILE_NO)) + "</InLawsMobileNo>");
+                stringBuilder_sibling.append("<InLawsAddress>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_VILLAGE)) + "</InLawsAddress>");
+                stringBuilder_sibling.append("<InLawsCountryId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_VILLAGE)) + "</InLawsCountryId>");
+                stringBuilder_sibling.append("<InLawsStateId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_VILLAGE)) + "</InLawsStateId>");
+                stringBuilder_sibling.append("<InLawsCityId>" + cursor_sibling.getString(cursor_sibling.getColumnIndex(SQLiteSiblingDetails.FATHER_IN_LAW_VILLAGE)) + "</InLawsCityId>");
+                stringBuilder_sibling.append("<SiblingLanguage>" + userModel.getLanguage() + "</SiblingLanguage>");
+
+
+                stringBuilder_sibling.append("</Functions>");
+
+            }
+
+            stringBuilder_sibling.append("</Assign>");
+
+
+        }
+        cursor_sibling.close();
+
+
+    }
 
 
     void getDetails()
@@ -1015,170 +1075,257 @@
                                     editText_fatherState.setText(jsonObject.getString("FatherStateName"));
                                     editText_fatherCity.setText(jsonObject.getString("FatherCityName"));
 
-                                    sqLiteMamaDetails.deleteAll();
-                                    addPersonModelArrayList_mama.clear();
-                                    addPersonAdapter_mama.notifyDataSetChanged();
-                                    JSONArray jsonArray_mamaDetails = jsonObject.getJSONArray("MamaDetailsLST");
 
 
-                                    for(int j=0; j< jsonArray_mamaDetails.length(); j++)
-                                    {
 
-                                        JSONObject jsonObject_details = jsonArray_mamaDetails.getJSONObject(j);
+                                    getMamaDetailsXML(jsonObject);
+                                    getSiblingDetailsXML(jsonObject);
+                                    getFarmDetailsXML(jsonObject);
+                                    getPropertyDetailsXML(jsonObject);
 
 
-                                        long id = sqLiteMamaDetails.insertMamaDetails(
-                                                jsonObject_details.getString("MamaDetailsId"),
-                                                jsonObject_details.getString("MamaFullnameAPI"),
-                                                jsonObject_details.getString("MamaMobileNoAPI"),
-                                                jsonObject_details.getString("OccupationIdMama"),
-                                                jsonObject_details.getString("OccupationNameMama"),
-                                                jsonObject_details.getString("MamaAddressAPI"),
-                                                jsonObject_details.getString("MamaCountryName"),
-                                                jsonObject_details.getString("MamaCountryId"),
-                                                jsonObject_details.getString("MamaStateName"),
-                                                jsonObject_details.getString("MamaStateId"),
-                                                jsonObject_details.getString("MamaCityName"),
-                                                jsonObject_details.getString("MamaCityId"),
-                                                jsonObject_details.getString("IsAliveMama"));
 
+                                }
 
-                                        addPersonModelArrayList_mama.add(new AddPersonModel(String.valueOf(id),
-                                                jsonObject_details.getString("MamaDetailsId"),
-                                                jsonObject_details.getString("MamaFullnameAPI"),
-                                                jsonObject_details.getString("MamaAddressAPI")));
 
 
+                            }
+                            else
+                            {
+                                familyDetailsId = 0;
+                                fatherDetailsId = 0;
+                                motherDetailsId = 0;
+                                customDialogLoadingProgressBar.dismiss();
+                                Toast.makeText(getContext()," Please enter your details! ",Toast.LENGTH_SHORT).show();
+                            }
 
+                        } catch (JSONException e) {
+                            e.printStackTrace();
+                        }
 
-                                    }
+                    }
+                },
+                new Response.ErrorListener() {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                     //   Toast.makeText(getContext(),"Something went wrong POST ! ",Toast.LENGTH_SHORT).show();
+                        Toast.makeText(getContext(),error.toString(),Toast.LENGTH_SHORT).show();
+                        Log.e("Error",error.toString());
+                    }
+                }) {
+            @Override
+            protected Map<String, String> getParams() throws AuthFailureError {
+                Map<String, String> params = new HashMap<>();
+                return params;
+            }
+        };
+
+        stringRequest.setRetryPolicy(new DefaultRetryPolicy(0,
+                DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
+
+        VolleySingleton.getInstance(getContext()).addToRequestQueue(stringRequest);
 
 
+    }
 
-                                    sqLitePropertyDetails.deleteAll();
+    private void getPropertyDetailsXML(JSONObject jsonObject) {
+
+        try {
+            sqLitePropertyDetails.deleteAll();
+            addPersonModelArrayList_property.clear();
+            addPersonAdapter_property.notifyDataSetChanged();
+            JSONArray jsonArray_propertyDetails = jsonObject.getJSONArray("HousePropertyDetailsLST");
+
+            for(int j=0; j< jsonArray_propertyDetails.length(); j++)
+            {
+
+                JSONObject jsonObject_details = jsonArray_propertyDetails.getJSONObject(j);
+
+
+                long id = sqLitePropertyDetails.insertPropertyDetails(
+                        jsonObject_details.getString("HousePropertyDetailsId"),
+                        jsonObject_details.getString("PropertyName"),
+                        jsonObject_details.getString("PropertyTypeId"),
+                        jsonObject_details.getString("PropertyOwnershipType"),
+                        jsonObject_details.getString("PropertyBHKType"),
+                        jsonObject_details.getString("PropertyBHKType"),
+                        jsonObject_details.getString("PropertyArea"),
+                        jsonObject_details.getString("PropertyAddress"),
+                        jsonObject_details.getString("CountryName"),
+                        jsonObject_details.getString("PropertyCountryId"),
+                        jsonObject_details.getString("StateName"),
+                        jsonObject_details.getString("PropertyStateId"),
+                        jsonObject_details.getString("CityName"),
+                        jsonObject_details.getString("PropertyCityId"));
+
+
+                addPersonModelArrayList_property.add(new AddPersonModel(String.valueOf(id),
+                        jsonObject_details.getString("HousePropertyDetailsId"),
+                        jsonObject_details.getString("PropertyName"),
+                        jsonObject_details.getString("PropertyBHKType")));
+
+            }
+
+            addPersonAdapter_property.notifyDataSetChanged();
+
+
+        }
+
+        catch (JSONException jsonException)
+        {
+
+        }
+    }
+
+    private void getFarmDetailsXML(JSONObject jsonObject) {
+
+        try {
+            sqLiteFarmDetails.deleteAll();
+            addPersonModelArrayList_farm.clear();
+
 
+            JSONArray jsonArray_farmDetails = jsonObject.getJSONArray("FarmDetailsLST");
 
-                                    sqLiteSiblingDetails.deleteAll();
-                                    addPersonModelArrayList_sibling.clear();
-                                    addPersonAdapter_sibling.notifyDataSetChanged();
+
+            for(int j=0; j< jsonArray_farmDetails.length(); j++) {
+                JSONObject jsonObject_details = jsonArray_farmDetails.getJSONObject(j);
+
+
+                long id = sqLiteFarmDetails.insertFarmDetails(
+                        jsonObject_details.getString("FarmPropertyDetailsId"),
+                        jsonObject_details.getString("LandArea"),
+                        jsonObject_details.getString("FullOrPart"),
+                        jsonObject_details.getString("CropTaken"),"Irrigated");
+
+
+                addPersonModelArrayList_farm.add(new AddPersonModel(String.valueOf(id),
+                        jsonObject_details.getString("FarmPropertyDetailsId"),
+                        jsonObject_details.getString("LandArea"),
+                        jsonObject_details.getString("CropTaken")));
+
+
+
+            }
+            addPersonAdapter_farm.notifyDataSetChanged();
+            //farmRecyclerView();
+
+        }
+        catch (JSONException jsonException)
+        {}
+
+
+
+
+    }
+
+    private void getSiblingDetailsXML(JSONObject jsonObject) {
+
+
+        try {
+            sqLiteSiblingDetails.deleteAll();
+            addPersonModelArrayList_sibling.clear();
+            addPersonAdapter_sibling.notifyDataSetChanged();
 
-                                    JSONArray jsonArray_siblingDetails = jsonObject.getJSONArray("SiblingsDetailsLST");
+            JSONArray jsonArray_siblingDetails = jsonObject.getJSONArray("SiblingsDetailsLST");
 
-                                    for(int j=0; j< jsonArray_siblingDetails.length(); j++)
-                                    {
-                                        JSONObject jsonObject_details = jsonArray_siblingDetails.getJSONObject(j);
+            for(int j=0; j< jsonArray_siblingDetails.length(); j++)
+            {
+                JSONObject jsonObject_details = jsonArray_siblingDetails.getJSONObject(j);
 
 
-                                        long id = sqLiteSiblingDetails.insertSibling(
-                                                jsonObject_details.getString("SiblingsDetailsId"),
-                                                jsonObject_details.getString("SiblingsFullname"),
-                                                jsonObject_details.getString("MobileNoSiblings"),
-                                                jsonObject_details.getString("QualificationIdSiblings"),
-                                                jsonObject_details.getString("QualificationSiblings"),
-                                                jsonObject_details.getString("OccupationIdSiblings"),
-                                                jsonObject_details.getString("OccupationNameSiblings"),
-                                                jsonObject_details.getString("MaritalStatus"),
-                                                jsonObject_details.getString("SiblingListIdAPI"),
-                                                jsonObject_details.getString("SiblingSpouseName"),
-                                                jsonObject_details.getString("SiblingSpouseName"), //change-> should be replaced with spouse Name
-                                                jsonObject_details.getString("InLawsFullNameAPI"),
-                                                jsonObject_details.getString("InLawsMobileNoAPI"),
-                                                jsonObject_details.getString("InLawsAddressAPI"),
-                                                jsonObject_details.getString("SiblingListIdAPI"),
-                                                jsonObject_details.getString("SiblingListIdAPI"),
-                                                jsonObject_details.getString("SiblingListIdAPI"),
-                                                jsonObject_details.getString("SiblingListIdAPI"),
-                                                jsonObject_details.getString("SiblingListIdAPI"),
-                                                jsonObject_details.getString("SiblingListIdAPI"));
+                long id = sqLiteSiblingDetails.insertSibling(
+                        jsonObject_details.getString("SiblingsDetailsId"),
+                        jsonObject_details.getString("SiblingsFullname"),
+                        jsonObject_details.getString("MobileNoSiblings"),
+                        jsonObject_details.getString("QualificationIdSiblings"),
+                        jsonObject_details.getString("QualificationSiblings"),
+                        jsonObject_details.getString("OccupationIdSiblings"),
+                        jsonObject_details.getString("OccupationNameSiblings"),
+                        jsonObject_details.getString("MaritalStatus"),
+                        jsonObject_details.getString("SiblingListIdAPI"),
+                        jsonObject_details.getString("SiblingSpouseName"),
+                        jsonObject_details.getString("SiblingSpouseName"), //change-> should be replaced with spouse Name
+                        jsonObject_details.getString("InLawsFullNameAPI"),
+                        jsonObject_details.getString("InLawsMobileNoAPI"),
+                        jsonObject_details.getString("InLawsAddressAPI"),
+                        jsonObject_details.getString("SiblingListIdAPI"),
+                        jsonObject_details.getString("SiblingListIdAPI"),
+                        jsonObject_details.getString("SiblingListIdAPI"),
+                        jsonObject_details.getString("SiblingListIdAPI"),
+                        jsonObject_details.getString("SiblingListIdAPI"),
+                        jsonObject_details.getString("SiblingListIdAPI"));
 
 
-                                        addPersonModelArrayList_sibling.add(new AddPersonModel(String.valueOf(id),
-                                                jsonObject_details.getString("SiblingsDetailsId"),
-                                                jsonObject_details.getString("SiblingsFullname"),
-                                                jsonObject_details.getString("QualificationSiblings")));
+                addPersonModelArrayList_sibling.add(new AddPersonModel(String.valueOf(id),
+                        jsonObject_details.getString("SiblingsDetailsId"),
+                        jsonObject_details.getString("SiblingsFullname"),
+                        jsonObject_details.getString("QualificationSiblings")));
 
 
 
-
-
-                                    }
+            }
 
 
 
-                                    sqLiteFarmDetails.deleteAll();
-                                    addPersonModelArrayList_farm.clear();
+        }
+        catch (JSONException jsonException)
+        {
 
+        }
 
-                                    JSONArray jsonArray_farmDetails = jsonObject.getJSONArray("FarmDetailsLST");
 
 
-                                    for(int j=0; j< jsonArray_farmDetails.length(); j++) {
-                                        JSONObject jsonObject_details = jsonArray_farmDetails.getJSONObject(j);
-
+    }
 
-                                        long id = sqLiteFarmDetails.insertFarmDetails(
-                                                jsonObject_details.getString("FarmPropertyDetailsId"),
-                                                jsonObject_details.getString("LandArea"),
-                                                jsonObject_details.getString("FullOrPart"),
-                                                jsonObject_details.getString("CropTaken"),"Irrigated");
+    private void getMamaDetailsXML(JSONObject jsonObject) throws JSONException {
 
 
-                                        addPersonModelArrayList_farm.add(new AddPersonModel(String.valueOf(id),
-                                                jsonObject_details.getString("FarmPropertyDetailsId"),
-                                                jsonObject_details.getString("LandArea"),
-                                                jsonObject_details.getString("CropTaken")));
+        try {
+            sqLiteMamaDetails.deleteAll();
+            addPersonModelArrayList_mama.clear();
+            addPersonAdapter_mama.notifyDataSetChanged();
+            JSONArray jsonArray_mamaDetails = jsonObject.getJSONArray("MamaDetailsLST");
 
 
+            for(int j=0; j< jsonArray_mamaDetails.length(); j++)
+            {
 
-                                    }
-                                    addPersonAdapter_farm.notifyDataSetChanged();
-                                    //farmRecyclerView();
+                JSONObject jsonObject_details = jsonArray_mamaDetails.getJSONObject(j);
 
 
-                                }
+                long id = sqLiteMamaDetails.insertMamaDetails(
+                        jsonObject_details.getString("MamaDetailsId"),
+                        jsonObject_details.getString("MamaFullnameAPI"),
+                        jsonObject_details.getString("MamaMobileNoAPI"),
+                        jsonObject_details.getString("OccupationIdMama"),
+                        jsonObject_details.getString("OccupationNameMama"),
+                        jsonObject_details.getString("MamaAddressAPI"),
+                        jsonObject_details.getString("MamaCountryName"),
+                        jsonObject_details.getString("MamaCountryId"),
+                        jsonObject_details.getString("MamaStateName"),
+                        jsonObject_details.getString("MamaStateId"),
+                        jsonObject_details.getString("MamaCityName"),
+                        jsonObject_details.getString("MamaCityId"),
+                        jsonObject_details.getString("IsAliveMama"));
 
 
+                addPersonModelArrayList_mama.add(new AddPersonModel(String.valueOf(id),
+                        jsonObject_details.getString("MamaDetailsId"),
+                        jsonObject_details.getString("MamaFullnameAPI"),
+                        jsonObject_details.getString("MamaAddressAPI")));
 
-                            }
-                            else
-                            {
-                                familyDetailsId = 0;
-                                fatherDetailsId = 0;
-                                motherDetailsId = 0;
-                                customDialogLoadingProgressBar.dismiss();
-                                Toast.makeText(getContext()," Please enter your details! ",Toast.LENGTH_SHORT).show();
-                            }
+            }
+            addPersonAdapter_mama.notifyDataSetChanged();
 
-                        } catch (JSONException e) {
-                            e.printStackTrace();
-                        }
+        }
+        catch (JSONException jsonException)
+        {
 
-                    }
-                },
-                new Response.ErrorListener() {
-                    @Override
-                    public void onErrorResponse(VolleyError error) {
-                     //   Toast.makeText(getContext(),"Something went wrong POST ! ",Toast.LENGTH_SHORT).show();
-                        Toast.makeText(getContext(),error.toString(),Toast.LENGTH_SHORT).show();
-                        Log.e("Error",error.toString());
-                    }
-                }) {
-            @Override
-            protected Map<String, String> getParams() throws AuthFailureError {
-                Map<String, String> params = new HashMap<>();
-                return params;
-            }
-        };
-
-        stringRequest.setRetryPolicy(new DefaultRetryPolicy(0,
-                DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
+        }
 
-        VolleySingleton.getInstance(getContext()).addToRequestQueue(stringRequest);
 
 
     }
-
-
 
 
     public class AsyncTaskLoad extends AsyncTask<String, String, String> {
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_11-01-2021_12_46__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_11-01-2021_12_46__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_08-01-2021_14_20__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_08-01-2021_14_20__Default_Changelist_.xml
