Index: app/src/main/java/com/example/matrimonyapp/activity/SignalrChatActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.matrimonyapp.activity;\r\n\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.matrimonyapp.R;\r\nimport com.example.matrimonyapp.modal.UserChat;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\nimport microsoft.aspnet.signalr.client.Credentials;\r\nimport microsoft.aspnet.signalr.client.Platform;\r\nimport microsoft.aspnet.signalr.client.SignalRFuture;\r\nimport microsoft.aspnet.signalr.client.http.Request;\r\nimport microsoft.aspnet.signalr.client.http.android.AndroidPlatformComponent;\r\nimport microsoft.aspnet.signalr.client.hubs.HubConnection;\r\nimport microsoft.aspnet.signalr.client.hubs.HubProxy;\r\nimport microsoft.aspnet.signalr.client.hubs.SubscriptionHandler1;\r\nimport microsoft.aspnet.signalr.client.hubs.SubscriptionHandler2;\r\nimport microsoft.aspnet.signalr.client.transport.ClientTransport;\r\nimport microsoft.aspnet.signalr.client.transport.ServerSentEventsTransport;\r\n\r\npublic class SignalrChatActivity extends AppCompatActivity {\r\n    EditText username, message, send_message;\r\n    Button connection, disconnection, send;\r\n    Spinner users;\r\n    HubConnection hubConnection; //Do the signalR definitions\r\n    HubProxy hubProxy;\r\n    Handler mHandler=new Handler(); //listener\r\n    List<UserChat> userList;\r\n    List<String> user_names;\r\n    UserChat sender;\r\n    Context cx;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.chat_activity);\r\n        username = (EditText) findViewById(R.id.putText);\r\n        message = (EditText) findViewById(R.id.edit_message);\r\n        send_message=(EditText)findViewById(R.id.messageScreen);\r\n        connection = (Button) findViewById(R.id.btnconnect);\r\n        disconnection = (Button) findViewById(R.id.btndisconnect);\r\n        send = (Button) findViewById(R.id.send_message);\r\n        users = (Spinner) findViewById(R.id.userlst);\r\n        cx = this;\r\n        userList = new ArrayList<UserChat>();\r\n        users.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                if(position>0){\r\n                    sender=userList.get(position-1);\r\n                    send.setEnabled(true);\r\n                }\r\n                else{\r\n                    send.setEnabled(false);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n        send.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (!message.getText().toString().trim().equals(\"\") && sender != null) { // WebApi Methods\r\n                    hubProxy.invoke(\"sendMessage\", new Object[]{message.getText().toString().trim(), sender.connectionID\r\n                    });//we have parameterized what we want in the web API method\r\n                }\r\n            }\r\n        });\r\n        connection.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                connect(); // connect chat server\r\n            }\r\n        });\r\n        disconnection.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                disconnect(); //disconnect chat server\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    void connect() {\r\n        Platform.loadPlatformComponent(new AndroidPlatformComponent());\r\n        Credentials credentials = new Credentials() {\r\n            @Override\r\n            public void prepareRequest(Request request) {\r\n                request.addHeader(\"username\", username.getText().toString().trim()); //get username\r\n            }\r\n        };\r\n        String serverUrl=\"http://sam.sharpflux.com/signalr\"; // connect to signalr server\r\n        hubConnection = new HubConnection(serverUrl);\r\n        hubConnection.setCredentials(credentials);\r\n        hubConnection.connected(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n            }\r\n        });\r\n        String CLIENT_METHOD_BROADAST_MESSAGE = \"getUserList\"; // get webapi serv methods\r\n        hubProxy = hubConnection.createHubProxy(\"chatHub\"); // web api  necessary method name\r\n        ClientTransport clientTransport = new ServerSentEventsTransport((hubConnection.getLogger()));\r\n        SignalRFuture<Void> signalRFuture = hubConnection.start(clientTransport);\r\n        hubProxy.on(CLIENT_METHOD_BROADAST_MESSAGE, new SubscriptionHandler1<String>() {\r\n            @Override\r\n            public void run(String s) {\r\n                try { // we added the list of connected users\r\n                    JSONArray jsonArray = new JSONArray(s);\r\n                    userList = new ArrayList<UserChat>();\r\n                    user_names = new ArrayList<String>();\r\n                    user_names.add(\"Select User\");\r\n                    for (int i = 0; i < jsonArray.length(); i++) {\r\n                        JSONObject jsonObject = jsonArray.getJSONObject(i);\r\n                        String username = jsonObject.getString(\"username\");\r\n                        String connection_id = jsonObject.getString(\"connectionID\");\r\n                        UserChat user = new UserChat(username, connection_id);\r\n                        userList.add(user);\r\n                        user_names.add(username);\r\n                    }\r\n                    mHandler.post(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            ArrayAdapter<String> adapter=new ArrayAdapter<String>(cx,android.R.layout.simple_list_item_1,user_names);\r\n                            adapter.setDropDownViewResource(android.R.layout.simple_list_item_1);\r\n                            users.setAdapter(adapter);\r\n                        }\r\n                    });\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }, String.class);\r\n        hubProxy.on(\"sendMessage\", new SubscriptionHandler2<String ,String>() {\r\n\r\n            @Override\r\n            public void run(final String s, final String s2) {\r\n                mHandler.post(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        send_message.setText(send_message.getText()+\"\\n\"+s2+\" : \"+s);\r\n                    }\r\n                });\r\n            }\r\n        },String.class,String.class);\r\n        try {\r\n            signalRFuture.get();\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            Log.e(\"SimpleSignalR\", e.toString());\r\n            return;\r\n        }\r\n    }\r\n    void disconnect(){ //disconnection server\r\n        hubConnection.stop();\r\n        userList.clear();\r\n        users.setAdapter(null);\r\n        send.setEnabled(false);\r\n        sender=null;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/matrimonyapp/activity/SignalrChatActivity.java	(revision fd8857f25a2d173c10dbc278001ab26772593125)
+++ app/src/main/java/com/example/matrimonyapp/activity/SignalrChatActivity.java	(date 1611334428843)
@@ -34,6 +34,7 @@
 import microsoft.aspnet.signalr.client.hubs.HubProxy;
 import microsoft.aspnet.signalr.client.hubs.SubscriptionHandler1;
 import microsoft.aspnet.signalr.client.hubs.SubscriptionHandler2;
+import microsoft.aspnet.signalr.client.hubs.SubscriptionHandler4;
 import microsoft.aspnet.signalr.client.transport.ClientTransport;
 import microsoft.aspnet.signalr.client.transport.ServerSentEventsTransport;
 
@@ -83,7 +84,7 @@
             @Override
             public void onClick(View v) {
                 if (!message.getText().toString().trim().equals("") && sender != null) { // WebApi Methods
-                    hubProxy.invoke("sendMessage", new Object[]{message.getText().toString().trim(), sender.connectionID
+                    hubProxy.invoke("sendMessage", new Object[]{message.getText().toString().trim(), "50", sender.connectionID
                     });//we have parameterized what we want in the web API method
                 }
             }
@@ -108,7 +109,9 @@
         Credentials credentials = new Credentials() {
             @Override
             public void prepareRequest(Request request) {
-                request.addHeader("username", username.getText().toString().trim()); //get username
+                request.addHeader("DisplayName", username.getText().toString().trim());
+                request.addHeader("FromUserId", username.getText().toString().trim());
+                //get username
             }
         };
         String serverUrl="http://sam.sharpflux.com/signalr"; // connect to signalr server
@@ -123,6 +126,10 @@
         hubProxy = hubConnection.createHubProxy("chatHub"); // web api  necessary method name
         ClientTransport clientTransport = new ServerSentEventsTransport((hubConnection.getLogger()));
         SignalRFuture<Void> signalRFuture = hubConnection.start(clientTransport);
+
+
+
+
         hubProxy.on(CLIENT_METHOD_BROADAST_MESSAGE, new SubscriptionHandler1<String>() {
             @Override
             public void run(String s) {
@@ -133,7 +140,7 @@
                     user_names.add("Select User");
                     for (int i = 0; i < jsonArray.length(); i++) {
                         JSONObject jsonObject = jsonArray.getJSONObject(i);
-                        String username = jsonObject.getString("username");
+                        String username = jsonObject.getString("DisplayName");
                         String connection_id = jsonObject.getString("connectionID");
                         UserChat user = new UserChat(username, connection_id);
                         userList.add(user);
@@ -152,7 +159,9 @@
                 }
             }
         }, String.class);
-        hubProxy.on("sendMessage", new SubscriptionHandler2<String ,String>() {
+
+
+        hubProxy.on("getallMessages", new SubscriptionHandler2<String ,String>() {
 
             @Override
             public void run(final String s, final String s2) {
@@ -164,6 +173,28 @@
                 });
             }
         },String.class,String.class);
+
+
+
+
+
+
+        hubProxy.on("getallMessages", new SubscriptionHandler4<String, String, String, String>() {
+
+
+            @Override
+            public void run(String s, String s2, final String abc, final String cde) {
+                mHandler.post(new Runnable() {
+                    @Override
+                    public void run() {
+                        send_message.setText(send_message.getText()+"\n"+abc+" : "+cde);
+                    }
+                });
+            }
+
+        },String.class,String.class,String.class,String.class);
+
+
         try {
             signalRFuture.get();
         } catch (InterruptedException | ExecutionException e) {
