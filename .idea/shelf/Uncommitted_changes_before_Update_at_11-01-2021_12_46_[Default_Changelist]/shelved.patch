Index: app/src/main/res/layout/custom_dialog_add_education.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:background=\"@drawable/dialog_rounded_corners_gray_background\"\r\n    android:layout_marginTop=\"40dp\"\r\n    android:layout_marginBottom=\"40dp\"\r\n    android:layout_marginStart=\"20dp\"\r\n    android:layout_marginEnd=\"20dp\"\r\n\r\n    >\r\n    <include\r\n        android:id=\"@+id/include_toolbar\"\r\n        layout=\"@layout/top_rounded_toolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:layout_marginTop=\"0dp\" />\r\n\r\n    <!--\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"@color/text_black\"\r\n                android:textSize=\"15sp\"\r\n                android:text=\"@string/farm_details\"\r\n                android:layout_marginStart=\"20dp\"\r\n                android:layout_marginEnd=\"20dp\"\r\n                android:textStyle=\"bold\"\r\n                android:layout_marginTop=\"30dp\"\r\n                android:layout_marginBottom=\"10dp\"\r\n                />\r\n    -->\r\n\r\n\r\n    <ScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:scrollbars=\"none\"\r\n        android:layout_marginBottom=\"50dp\"\r\n        android:layout_below=\"@id/include_toolbar\"\r\n        >\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            android:gravity=\"center\"\r\n            android:layout_marginTop=\"5dp\"\r\n            >\r\n\r\n\r\n        <androidx.cardview.widget.CardView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            app:cardElevation=\"0.5dp\"\r\n            >\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingTop=\"10dp\"\r\n            android:paddingStart=\"20dp\"\r\n            android:paddingEnd=\"20dp\"\r\n            android:paddingBottom=\"10dp\"\r\n            android:background=\"@color/white\"\r\n            android:orientation=\"vertical\"\r\n            android:gravity=\"center\"\r\n            >\r\n\r\n\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:theme=\"@style/TextLabel\"\r\n                android:layout_marginTop=\"8dp\"\r\n                >\r\n\r\n                <EditText\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:id=\"@+id/editText_educationLevel\"\r\n                    android:hint=\"@string/education_level\"\r\n                    android:textColor=\"@color/text_black\"\r\n                    android:textSize=\"15sp\"\r\n                    android:clickable=\"false\"\r\n                    android:focusable=\"false\"\r\n                    />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:id=\"@+id/textView_educationLevelId\"\r\n                android:text=\"id\"\r\n                android:visibility=\"gone\"\r\n                />\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:theme=\"@style/TextLabel\"\r\n                android:layout_marginTop=\"8dp\"\r\n                >\r\n\r\n                <EditText\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:id=\"@+id/editText_educationName\"\r\n                    android:hint=\"@string/education\"\r\n                    android:textColor=\"@color/text_black\"\r\n                    android:textSize=\"15sp\"\r\n                    android:clickable=\"false\"\r\n                    android:focusable=\"false\"\r\n                    />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:id=\"@+id/textView_educationNameId\"\r\n                android:text=\"0\"\r\n                android:visibility=\"gone\"\r\n                />\r\n\r\n\r\n<!---->\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:theme=\"@style/TextLabel\"\r\n                android:layout_marginTop=\"15dp\"\r\n                >\r\n\r\n                <EditText\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:id=\"@+id/editText_institueName\"\r\n                    android:hint=\"@string/institue_university\"\r\n                    android:textColor=\"@color/text_black\"\r\n                    android:textSize=\"15sp\"\r\n                    android:clickable=\"true\"\r\n                    />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n<!--            <com.google.android.material.textfield.TextInputLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:theme=\"@style/TextLabel\"\r\n                android:layout_marginTop=\"8dp\"\r\n                >\r\n\r\n                <EditText\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:id=\"@+id/editText_institue\"\r\n                    android:hint=\"@string/institue_university\"\r\n                    android:textColor=\"@color/text_black\"\r\n                    android:textSize=\"15sp\"\r\n                    android:inputType=\"textCapWords\"\r\n                    android:maxLines=\"5\"\r\n                    android:clickable=\"true\"\r\n                    android:focusable=\"true\"\r\n                    android:lineSpacingMultiplier=\"1.2\"\r\n                    />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>-->\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:theme=\"@style/TextLabel\"\r\n                android:layout_marginTop=\"8dp\"\r\n                >\r\n\r\n                <EditText\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:id=\"@+id/editText_percentage\"\r\n                    android:hint=\"@string/percentage\"\r\n                    android:textColor=\"@color/text_black\"\r\n                    android:textSize=\"15sp\"\r\n                    android:focusable=\"false\"\r\n                    android:clickable=\"false\"\r\n                    />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:theme=\"@style/TextLabel\"\r\n                android:layout_marginTop=\"8dp\"\r\n                >\r\n\r\n                <EditText\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:id=\"@+id/editText_passingYear\"\r\n                    android:hint=\"@string/passing_year\"\r\n                    android:textColor=\"@color/text_black\"\r\n                    android:textSize=\"15sp\"\r\n                    android:clickable=\"false\"\r\n                    android:focusable=\"false\"\r\n                    />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n\r\n        </LinearLayout>\r\n        </androidx.cardview.widget.CardView>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </LinearLayout>\r\n\r\n\r\n    </ScrollView>\r\n\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/shadow_down\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"3dp\"\r\n        android:orientation=\"horizontal\"\r\n        android:background=\"@drawable/shadow_down\"\r\n        android:layout_below=\"@id/include_toolbar\"\r\n        />\r\n    <!--    </LinearLayout>-->\r\n\r\n    <!--\"alignParentBottom\" property is used to stitch the textview\r\n    at the bottom pf the screen...-->\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView_addEducation\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"50dp\"\r\n        android:background=\"@drawable/gradient_bottom_rounded_corner\"\r\n        android:gravity=\"center\"\r\n        android:layout_gravity=\"center\"\r\n        android:text=\"@string/add_education\"\r\n        android:textColor=\"@color/white\"\r\n        android:duplicateParentState=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        />\r\n\r\n\r\n\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/custom_dialog_add_education.xml	(revision 02aaea3a4382091ac836715d061316591f06d179)
+++ app/src/main/res/layout/custom_dialog_add_education.xml	(date 1610096107973)
@@ -148,7 +148,7 @@
                     android:hint="@string/institue_university"
                     android:textColor="@color/text_black"
                     android:textSize="15sp"
-                    android:clickable="true"
+                    android:inputType="text"
                     />
 
             </com.google.android.material.textfield.TextInputLayout>
@@ -166,7 +166,7 @@
                     android:hint="@string/institue_university"
                     android:textColor="@color/text_black"
                     android:textSize="15sp"
-                    android:inputType="textCapWords"
+                    android:inputType="text"
                     android:maxLines="5"
                     android:clickable="true"
                     android:focusable="true"
Index: app/src/main/java/com/example/matrimonyapp/activity/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.matrimonyapp.activity;\r\n\r\nimport android.Manifest;\r\nimport android.content.ContentResolver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.Configuration;\r\nimport android.database.Cursor;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.telephony.TelephonyManager;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.MenuItem;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.ExpandableListView;\r\nimport android.widget.ImageView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBar;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.recyclerview.widget.DefaultItemAnimator;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.example.matrimonyapp.R;\r\nimport com.example.matrimonyapp.adapter.NavigationDrawerAdapter;\r\nimport com.example.matrimonyapp.adapter.TimelineAdapter;\r\nimport com.example.matrimonyapp.customViews.CustomDialogLoadingProgressBar;\r\nimport com.example.matrimonyapp.customViews.CustomNavigationView;\r\nimport com.example.matrimonyapp.modal.NavigationItemListModel;\r\nimport com.example.matrimonyapp.modal.TimelineModel;\r\nimport com.example.matrimonyapp.modal.UserModel;\r\nimport com.example.matrimonyapp.sqlite.SQLiteSetPreference;\r\nimport com.example.matrimonyapp.volley.CustomSharedPreference;\r\nimport com.example.matrimonyapp.volley.URLs;\r\nimport com.example.matrimonyapp.volley.VolleySingleton;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n\r\npublic class HomeActivity extends AppCompatActivity  {//implements SimpleGestureFilter.SimpleGestureListener\r\n    \r\n    private String currentLanguage;\r\n    private SwipeRefreshLayout swipeRefresLayout;\r\n\r\n    private Toolbar toolbar;\r\n    private UserModel userModel;\r\n\r\n    private DrawerLayout drawer;\r\n    private ActionBarDrawerToggle actionBarDrawerToggle;\r\n    NavigationView navigationView;\r\n    private RecyclerView drawerrecyview;\r\n    private NavigationDrawerAdapter navigationDrawerAdapter;\r\n    private ArrayList<NavigationItemListModel> activityListModelArrayList;\r\n\r\n    //private SimpleGestureFilter detector;\r\n\r\n    TimelineAdapter timelineAdapter;\r\n    private ImageView imageView_home, imageView_search, imageView_message, imageView_like ,imageView_myProfile;\r\n\r\n    private TextView textView_welcomeUserName;\r\n    private ImageView imageView_profilePic;\r\n\r\n    ArrayList<TimelineModel> timelineModelList;\r\n    RecyclerView recyclerView_timeline;\r\n    private CustomDialogLoadingProgressBar customDialogLoadingProgressBar;\r\n\r\n    SQLiteSetPreference sqLiteSetPreference;\r\n\r\n    static String gender, stateIds, countryIds, cityIds, maritalStatusIds, familyTypeIds, familyValueIds,\r\n            familyIncomeIds, individualIncomeIds, qualificationLevelIds, qualificationIds, dietIds, colorIds,\r\n            occupationIds, religionIds, casteIds, subCasteIds, ageMin, ageMax, heightMin, heightMax;\r\n\r\n\r\n    FirebaseAuth firebaseAuth;\r\n    DatabaseReference databaseReference;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home);\r\n\r\n        init();\r\n\r\n        TelephonyManager telephonyManager = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.READ_PHONE_STATE}, 101);\r\n            return;\r\n        }\r\n        String IMEINumber = telephonyManager.getDeviceId();\r\n        //textView.setText(IMEINumber);\r\n//        Toast.makeText(this, \" ln : \"+userModel.getLanguage()+\"\\nIMEI : \"+IMEINumber, Toast.LENGTH_SHORT).show();\r\n        // timelineAdapter = new TimelineAdapter(this,)\r\n\r\n\r\n        //navigation();\r\n\r\n\r\n        setToolbar();\r\n\r\n\r\n\r\n\r\n        timelineModelList = new ArrayList<TimelineModel>();\r\n\r\n        fetchValues();\r\n        timelineAdapter = new TimelineAdapter(this,timelineModelList, getWindowManager().getDefaultDisplay());\r\n        recyclerView_timeline.setAdapter(timelineAdapter);\r\n        recyclerView_timeline.setHasFixedSize(true);\r\n        LinearLayoutManager mLayoutManager = new LinearLayoutManager(this);\r\n        recyclerView_timeline.setLayoutManager(mLayoutManager);\r\n        //Toast.makeText(getApplicationContext(), \" userId : \"+userModel.getUserId(), Toast.LENGTH_SHORT).show();\r\n\r\n\r\n        //detector = new SimpleGestureFilter(this,this);\r\n\r\n\r\n        swipeRefresLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh() {\r\n                insertDetails();\r\n                swipeRefresLayout.setRefreshing(false);\r\n            }\r\n        });\r\n\r\n        onClickListener();\r\n\r\n    }\r\n\r\n\r\n   /* private void navigation() {\r\n\r\n        drawer = findViewById(R.id.drawer_layout);\r\n        navigationView = findViewById(R.id.navigation_view);\r\n        textView_welcomeUserName = findViewById(R.id.textView_welcomeUserName);\r\n        textView_welcomeUserName.setText(userModel.getFullName());\r\n        actionBarDrawerToggle = new ActionBarDrawerToggle(this, drawer, toolbar, R.string.openDrawer, R.string.closeDrawer) {\r\n\r\n            @Override\r\n            public void onDrawerClosed(View drawerView) {\r\n                // Code here will be triggered once the drawer closes as we dont want anything to happen so we leave this blank\r\n                super.onDrawerClosed(drawerView);\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerOpened(View drawerView) {\r\n                // Code here will be triggered once the drawer open as we dont want anything to happen so we leave this blank\r\n                super.onDrawerOpened(drawerView);\r\n            }\r\n        };\r\n\r\n        //Setting the actionbarToggle to drawer layout\r\n        drawer.addDrawerListener(actionBarDrawerToggle);\r\n\r\n        //calling sync state is necessary or else your hamburger icon wont show up\r\n        actionBarDrawerToggle.syncState();\r\n        actionBarDrawerToggle.setDrawerIndicatorEnabled(false);\r\n\r\n        invalidateOptionsMenu();\r\n\r\n        ////////////////////////////////\r\n        drawerrecyview = findViewById(R.id.drawerrecyview);\r\n        RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(HomeActivity.this);\r\n        drawerrecyview.setLayoutManager(layoutManager);\r\n        drawerrecyview.setItemAnimator(new DefaultItemAnimator());\r\n\r\n\r\n        activityListModelArrayList = new ArrayList<>();\r\n        for (int i = 0; i < IMAGES.length; i++) {\r\n            NavigationItemListModel activityListModel = new NavigationItemListModel();\r\n            activityListModel.setTxt(TEXT[i]);\r\n            activityListModel.setImage(IMAGES[i]);\r\n            activityListModelArrayList.add(activityListModel);\r\n        }\r\n\r\n\r\n\r\n        navigationDrawerAdapter = new NavigationDrawerAdapter(HomeActivity.this, activityListModelArrayList);\r\n        drawerrecyview.setAdapter(navigationDrawerAdapter);\r\n\r\n\r\n\r\n    }*/\r\n   \r\n   \r\n   \r\n\r\n\r\n    private void init()\r\n    {\r\n\r\n        currentLanguage = getResources().getConfiguration().locale.getLanguage();\r\n\r\n        swipeRefresLayout = findViewById(R.id.swipeRefresLayout);\r\n        imageView_home = findViewById(R.id.imageView_home);\r\n        imageView_search = findViewById(R.id.imageView_search);\r\n        imageView_message = findViewById(R.id.imageView_message);\r\n        imageView_like = findViewById(R.id.imageView_like);\r\n        imageView_myProfile = findViewById(R.id.imageView_myProfile);\r\n/*        imageView_home.setColorFilter(ContextCompat.getColor(this,R.color.white)); //home Activity highlight\r\n        imageView_home.setBackgroundResource(R.drawable.gradient_place_order); //home Activity highlight*/\r\n\r\n        imageView_home.setImageResource(R.drawable.filled_home);\r\n        recyclerView_timeline = (RecyclerView) findViewById(R.id.recyclerView_timeline);\r\n        toolbar = findViewById(R.id.toolbar1);\r\n        textView_welcomeUserName = findViewById(R.id.textView_welcomeUserName);\r\n        imageView_profilePic = findViewById(R.id.imageView_profilePic);\r\n\r\n        if (!CustomSharedPreference.getInstance(this).isLoggedIn()) {\r\n            finish();\r\n            startActivity(new Intent(getApplicationContext(), LoginActivity.class));\r\n        }\r\n\r\n        userModel = CustomSharedPreference.getInstance(this).getUser();\r\n//        textView_welcomeUserName.setText(userModel.getFullName());\r\n        if( userModel!=null && !userModel.getProfilePic().equals(\"1\"))\r\n        {\r\n            //imageView_profilePic.setImageURI();\r\n        }\r\n\r\n\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n        firebaseLogin(userModel.getEmailId(),\"123456\");\r\n\r\n        swipeRefresLayout.setColorSchemeResources(R.color.project_color);\r\n\r\n       // register(\"\",\"\",\"\");\r\n\r\n    }\r\n\r\n\r\n    private void onClickListener() {\r\n\r\n\r\n        //onClickNewActivity(imageView_home, HomeActivity.this, HomeActivity.class);\r\n        onClickNewActivity(imageView_search, HomeActivity.this, SetPreferencesActivity.class);\r\n        onClickNewActivity(imageView_message, HomeActivity.this, DirectMessagesActivity.class);\r\n        onClickNewActivity(imageView_myProfile, HomeActivity.this, MyProfileActivity.class);\r\n        onClickNewActivity(imageView_like, HomeActivity.this, InterestActivity.class);\r\n    }\r\n\r\n    private void onClickNewActivity(View view, final Context context, final Class goToClass) {\r\n\r\n        view.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                Intent intent = new Intent(context, goToClass);\r\n                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP|Intent.FLAG_ACTIVITY_SINGLE_TOP);\r\n                startActivity(intent);\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void firebaseLogin(String emailId, String password)\r\n    {\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n\r\n        firebaseAuth.signInWithEmailAndPassword(emailId, password).addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<AuthResult> task) {\r\n\r\n                if(task.isSuccessful())\r\n                {\r\n                   /* Intent intent = new Intent(Home.this, HomeActivity.class);\r\n                    startActivity(intent);\r\n                    finish();*/\r\n\r\n                }\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n\r\n        if(!currentLanguage.equals(getResources().getConfiguration().locale.getLanguage())){\r\n            currentLanguage = getResources().getConfiguration().locale.getLanguage();\r\n            recreate();\r\n        }\r\n\r\n    }\r\n\r\n    private void fetchValues() {\r\n\r\n\r\n        sqLiteSetPreference = new SQLiteSetPreference(getApplicationContext());\r\n\r\n\r\n        if(sqLiteSetPreference.isPreferenceExistByUserId(userModel.getUserId()))\r\n        {\r\n            Cursor cursor_setPreference = sqLiteSetPreference.getDataByUserId(userModel.getUserId());\r\n            if(cursor_setPreference!=null)\r\n            {\r\n                for (boolean hasItem = cursor_setPreference.moveToFirst(); hasItem; hasItem = cursor_setPreference.moveToNext())\r\n                {\r\n                    gender = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.GENDER));\r\n                    stateIds = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.STATE_ID));\r\n                    countryIds = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.COUNTRY_ID));\r\n                    cityIds  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.CITY_ID));\r\n                    ageMin  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.AGE_MIN));\r\n                    ageMax  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.AGE_MAX));\r\n                    religionIds  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.RELIGION_ID));\r\n                    casteIds  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.CASTE_ID));\r\n                    subCasteIds = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.SUB_CASTE_ID));\r\n                    qualificationLevelIds  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.HIGHEST_QUALIFICATION_LEVEL_ID));\r\n                    qualificationIds  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.HIGHEST_QUALIFICATION_ID));\r\n                    maritalStatusIds  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.MARITAL_STATUS_ID));\r\n                    dietIds  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.DIET_ID));\r\n                    occupationIds  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.OCCUPATION_ID));\r\n                    familyIncomeIds  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.EXPECTED_FAMILY_INCOME));\r\n                    individualIncomeIds  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.EXPECTED_INDIVIDUAL_INCOME));\r\n                    familyTypeIds  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.FAMILY_TYPE));\r\n                    familyValueIds  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.FAMILY_VALUE));\r\n                    heightMin  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.HEIGHT_MIN));\r\n                    heightMax  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.HEIGHT_MAX));\r\n                    colorIds  = cursor_setPreference.getString(cursor_setPreference.getColumnIndex(SQLiteSetPreference.SKIN_COLOR_ID));\r\n\r\n\r\n                    AsyncTaskRunner runner = new AsyncTaskRunner();\r\n                    runner.execute(\"InsertDetails\");\r\n                    return;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        else\r\n        {\r\n            noValues();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void noValues() {\r\n        gender = \"0\";\r\n        stateIds = \"0\";\r\n        countryIds = \"0\";\r\n        cityIds  = \"0\";\r\n        ageMin  = \"0\";\r\n        ageMax  = \"0\";\r\n        religionIds  = \"0\";\r\n        casteIds  = \"0\";\r\n        subCasteIds = \"0\";\r\n        qualificationLevelIds  = \"0\";\r\n        qualificationIds  = \"0\";\r\n        maritalStatusIds  = \"0\";\r\n        dietIds  = \"0\";\r\n        occupationIds  = \"0\";\r\n        familyIncomeIds  = \"0\";\r\n        individualIncomeIds  = \"0\";\r\n        familyTypeIds  = \"0\";\r\n        familyValueIds  = \"0\";\r\n        heightMin  = \"0\";\r\n        heightMax  = \"0\";\r\n        colorIds  = \"0\";\r\n\r\n\r\n        AsyncTaskRunner runner = new AsyncTaskRunner();\r\n        runner.execute(\"InsertDetails\");\r\n        return;\r\n    }\r\n\r\n/*\r\n    @Override\r\n    public boolean dispatchTouchEvent(MotionEvent me){\r\n        // Call onTouchEvent of SimpleGestureFilter class\r\n        this.detector.onTouchEvent(me);\r\n        return super.dispatchTouchEvent(me);\r\n    }\r\n    @Override\r\n    public void onSwipe(int direction) {\r\n        String str = \"\";\r\n\r\n        switch (direction) {\r\n\r\n            case SimpleGestureFilter.SWIPE_RIGHT : str = \"Swipe Right\";\r\n\r\n                */\r\n/*Intent i = new Intent(HomeActivity.this,LoginActivity.class);\r\n                startActivity(i);*//*\r\n\r\n\r\n                break;\r\n            case SimpleGestureFilter.SWIPE_LEFT :  str = \"Swipe Left\";\r\n                //Intent i = new Intent(this, MyProfileActivity.class);\r\n               // Bundle bundle = ActivityOptions.makeCustomAnimation(getApplicationContext(), R.anim.anim_slide_in_left,R.anim.anim_slide_out_left).toBundle();\r\n                //startActivity(i, bundle);\r\n                //startActivity(i);\r\n                break;\r\n            case SimpleGestureFilter.SWIPE_DOWN :  str = \"Swipe Down\";\r\n                break;\r\n            case SimpleGestureFilter.SWIPE_UP :    str = \"Swipe Up\";\r\n                break;\r\n\r\n        }\r\n       // Toast.makeText(this, str, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @Override\r\n    public void onDoubleTap() {\r\n       // Toast.makeText(this, \"Double Tap\", Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public void onPointerCaptureChanged(boolean hasCapture) {\r\n\r\n    }\r\n*/\r\n\r\n\r\n\r\n/*    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        // toggle nav drawer on selecting action bar app icon/title\r\n        if (actionBarDrawerToggle.onOptionsItemSelected(item)) {\r\n            return true;\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }*/\r\n\r\n    /**\r\n     * When using the ActionBarDrawerToggle, you must call it during\r\n     * onPostCreate() and onConfigurationChanged()...\r\n     */\r\n\r\n    @Override\r\n    protected void onPostCreate(Bundle savedInstanceState) {\r\n        super.onPostCreate(savedInstanceState);\r\n        // Sync the toggle state after onRestoreInstanceState has occurred.\r\n       /* actionBarDrawerToggle.syncState();*/\r\n    }\r\n\r\n    @Override\r\n    public void onConfigurationChanged(Configuration newConfig) {\r\n        super.onConfigurationChanged(newConfig);\r\n        // Pass any configuration change to the drawer toggls\r\n        /*actionBarDrawerToggle.onConfigurationChanged(newConfig);*/\r\n    }\r\n\r\n/*    @Override\r\n    public void onBackPressed() {\r\n        if (drawer.isDrawerOpen(GravityCompat.END)) {\r\n\r\n            drawer.closeDrawer(Gravity.RIGHT); //OPEN Nav Drawer!\r\n        } else {\r\n            finish();\r\n        }\r\n    }*/\r\n\r\n\r\n    private void setToolbar() {\r\n\r\n        setSupportActionBar(toolbar);\r\n/*        ActionBar actionBar = getSupportActionBar();\r\n        if (actionBar != null) actionBar.setDisplayHomeAsUpEnabled(false);\r\n       // actionBar.setTitle(\"\");*/\r\n\r\n\r\n        ActionBar actionBar = getSupportActionBar();\r\n        if (actionBar != null) {\r\n            actionBar.setDisplayHomeAsUpEnabled(true);\r\n            actionBar.setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM);\r\n            actionBar.setCustomView(R.layout.main_toolbar);\r\n        }\r\n        /*findViewById(R.id.imageView_menu).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Log.e(\"Click\", \"keryu\");\r\n\r\n                if (drawer.isDrawerOpen(navigationView)) {\r\n                    drawer.closeDrawer(navigationView);\r\n                } else {\r\n                    drawer.openDrawer(navigationView);\r\n                }\r\n            }\r\n        });*/\r\n\r\n        findViewById(R.id.imageView_menu).setVisibility(View.GONE);\r\n\r\n    }\r\n\r\n\r\n   /* public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        DrawerLayout drawer = findViewById(R.id.drawer_layout);\r\n        drawer.closeDrawer(GravityCompat.END);\r\n        return true;\r\n\r\n\r\n    }*/\r\n\r\n    private void insertDetails() {\r\n\r\n\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST,\r\n                URLs.URL_POST_FILTER,\r\n                new Response.Listener<String>() {\r\n                    @Override\r\n                    public void onResponse(String response) {\r\n\r\n                        try {\r\n\r\n\r\n                            Log.d(\"RESPONSE\",response);\r\n                            //converting response to json object\r\n                            JSONObject jsonObject = new JSONObject(response);\r\n\r\n                            JSONArray jsonArray = jsonObject.getJSONArray(\"Registrations\");\r\n\r\n                            if(jsonArray.length()>0)\r\n                            {\r\n                                timelineModelList.clear();\r\n                                for(int i=0; i<jsonArray.length(); i++)\r\n                                {\r\n                                    JSONObject userJson = jsonArray.getJSONObject(i);\r\n\r\n                                    TimelineModel timelineModel = new TimelineModel();\r\n                                    timelineModel.setUserName(userJson.getString(\"FullName\"));\r\n                                    timelineModel.setUserId(userJson.getString(\"UserId\"));\r\n                                    timelineModel.setProfilePic(userJson.getString(\"ImageUrl\"));\r\n                                    timelineModel.setUserBirthday(userJson.getString(\"DateOfBirthString\"));\r\n                                    timelineModel.setUserMobileNo(userJson.getString(\"MobileNo\"));\r\n                                    timelineModel.setUserOccupation(userJson.getString(\"OccupationName\"));\r\n                                    timelineModel.setUserQualification(userJson.getString(\"Qualification\"));\r\n                                    timelineModel.setUserEmail(userJson.getString(\"EmailId\"));\r\n                                    timelineModelList.add(timelineModel);\r\n                                }\r\n                                //   getDetails();\r\n                                ///getProfilePic();\r\n\r\n                                timelineAdapter.notifyDataSetChanged();\r\n                                customDialogLoadingProgressBar.dismiss();\r\n\r\n                               // Toast.makeText(HomeActivity.this,\"Received successfully!\", Toast.LENGTH_SHORT).show();\r\n\r\n                            }\r\n                            else\r\n                            {\r\n                                Toast.makeText(HomeActivity.this,\"Invalid Details POST ! \",Toast.LENGTH_SHORT).show();\r\n                            }\r\n\r\n\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n                    }\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        Toast.makeText(HomeActivity.this,\"Something went wrong POST ! \",Toast.LENGTH_SHORT).show();\r\n                        error.printStackTrace();\r\n                    }\r\n                }) {\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                // params.put(\"UserId\",userModel.getUserId());                 //1\r\n                params.put(\"PageIndex\", \"1\");                               //2\r\n                params.put(\"PageSize\", \"100\");                              //3\r\n                params.put(\"Gender\", gender);                               //4\r\n                params.put(\"StateId\", stateIds);                            //5\r\n                params.put(\"DistrictId\", countryIds);                     //6\r\n                params.put(\"TalukasId\", cityIds);                         //7\r\n                params.put(\"AgeMin\", ageMin);  //8\r\n                params.put(\"AgeMax\", ageMax); //9\r\n                params.put(\"ReligionId\", religionIds);                      //10\r\n                params.put(\"CasteId\", casteIds);                            //11\r\n                params.put(\"SubCastId\", subCasteIds);                       //12\r\n                params.put(\"HightestQulificationLevelIds\", qualificationLevelIds);  //13\r\n                params.put(\"HightestQulificationIds\", qualificationIds);    //14\r\n                params.put(\"MaritalStatusIds\", maritalStatusIds);            //15\r\n                params.put(\"DietsIds\", dietIds);                            //16\r\n                params.put(\"OccupationsIds\", occupationIds);                //17\r\n                params.put(\"ExpectedFamilyIncome\", familyIncomeIds);        //18\r\n                params.put(\"ExpectedIndividualIncome\", individualIncomeIds);//19\r\n                params.put(\"FamilyType\", familyTypeIds);                    //20\r\n                params.put(\"FamilyValue\", familyValueIds);                  //21\r\n                params.put(\"Height\", heightMin);//22\r\n                params.put(\"HeightMax\", heightMax);   //23\r\n                params.put(\"SkinColourName\", colorIds);                     //24\r\n\r\n                return params;\r\n            }\r\n        };\r\n\r\n        VolleySingleton.getInstance(HomeActivity.this).addToRequestQueue(stringRequest);\r\n\r\n\r\n\r\n    }\r\n\r\n    class AsyncTaskRunner extends AsyncTask<String, String, String> {\r\n\r\n        @Override\r\n        protected String doInBackground(String[] params) {\r\n\r\n            if(params[0].equals(\"InsertDetails\"))\r\n            {\r\n                insertDetails();\r\n            }\r\n            else if(params[0].equals(\"getDetails\"))\r\n            {\r\n                getDetails();\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            return null;\r\n        }\r\n\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n            customDialogLoadingProgressBar = new CustomDialogLoadingProgressBar(HomeActivity.this);\r\n            customDialogLoadingProgressBar.show();\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(String s) {\r\n            super.onPostExecute(s);\r\n        }\r\n\r\n        @Override\r\n        protected void onProgressUpdate(String... values) {\r\n            super.onProgressUpdate(values);\r\n        }\r\n\r\n        @Override\r\n        protected void onCancelled(String s) {\r\n            super.onCancelled(s);\r\n        }\r\n\r\n        @Override\r\n        protected void onCancelled() {\r\n            super.onCancelled();\r\n        }\r\n    }\r\n\r\n\r\n    private void getDetails() {\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/matrimonyapp/activity/HomeActivity.java	(revision 02aaea3a4382091ac836715d061316591f06d179)
+++ app/src/main/java/com/example/matrimonyapp/activity/HomeActivity.java	(date 1610096290789)
@@ -56,6 +56,7 @@
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.android.material.navigation.NavigationView;
+import com.google.android.material.navigation.NavigationView;
 import com.google.firebase.auth.AuthResult;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
@@ -121,7 +122,7 @@
             ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.READ_PHONE_STATE}, 101);
             return;
         }
-        String IMEINumber = telephonyManager.getDeviceId();
+       // String IMEINumber = telephonyManager.getDeviceId();
         //textView.setText(IMEINumber);
 //        Toast.makeText(this, " ln : "+userModel.getLanguage()+"\nIMEI : "+IMEINumber, Toast.LENGTH_SHORT).show();
         // timelineAdapter = new TimelineAdapter(this,)
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8 (2)\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n        <option name=\"useQualifiedModuleNames\" value=\"true\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 02aaea3a4382091ac836715d061316591f06d179)
+++ .idea/gradle.xml	(date 1610095851062)
@@ -7,7 +7,6 @@
         <option name="testRunner" value="PLATFORM" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="gradleJvm" value="1.8 (2)" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8 (6)\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 02aaea3a4382091ac836715d061316591f06d179)
+++ .idea/misc.xml	(date 1610096650451)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8 (6)" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
